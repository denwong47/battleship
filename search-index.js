var searchIndex = JSON.parse('{\
"battleship":{"doc":"","t":"AAAAAFADDDAAAMMMMAMAMMFMMAMMMDLLLMLLMLLLLLDLMLLLLLLLLLLLLLLLLMLMMLLLLLFDDDDDDDAAAAMMMMMMMAAADLLLLLMLLLLLDLLLLLMLLLLLDLLLLLMLLLLLDLLLLLMLLLLLDDLLLLLLLLLLLLLMLLMLLMLLLLLLLLLMDDLLLLLLLLLLLLLLLMLLLLLLLLLLLMMDDLLLLLLLLMLLLLLMLLLLLLLLLLDLLMLLLLLMLLLLLMLMMLLLLMLAAFDLLLLLLLLMMLLLLLLDMLLLLLLMLLLLLLMLLLLLLDRRRRRDRMAMLLLLALMALLLLDDLLLLFFLLLLLLLLAFLLLLLLLLLLLFFDMLLLLLLLLLLMLLLLLLLLLFFENNNNNNNNNNNNNNNNNNNLLLOLLLLLLLLLLLMMMMMMMMMMMMMMMMMNNNNENNLLLFFFOLLFLLLLFLLLLFLNNDDRRRRDNNNNNNEENDNDEENDDNNNMAAAMMMMMMMMAMAMAAMAMMAMMMMMMAAMMMAMMMMMMMMDLLLLLLLLLLLMLLLLLLMLLLLMLMMLLMLLLLMLLDMLLLLLMLLLLLMMMLLLLLMLDLLLLLLLLLLLLLLLLLLLLLMMNENLLLLLLLLLLLLLLLRRRRNNENNLLLLLLLLLLLLLLLLLLLDLLLMLLLLLLLLLMLMLLMLLLLMLLLDLLLLMLLLLLLMMLLLLLMLNENNLLLLLLLLLLLLLLLLLNNNNENLLLLLLLOLLLLLLLLLLLDLLLLLMLLLLLLLLLLLLLMLLLDLLLLMLLLLMMLLLMLLLLLMLLIIIIKAKKKAAAKKIKILLIKILLLLLLAKKLLKKDLLMLLLLLMLLLL","n":["app","args","config","error","logger","main","models","AppHook","AppState","PageVisit","app_hook","app_state","base","boards","client","end_point","error","hooks","locked_state","page_visit","page_visits","path","run_app","start_time","status_code","tasks","termination_token","timestamp","url","AppHook","borrow","borrow_mut","call","end_point","from","into","locked_state","new","try_from","try_into","type_id","vzip","AppState","add_board","boards","borrow","borrow_mut","default","deserialize","drop_board","elapsed","erased_serialize","fmt","from","get_board","get_board_status","into","list_board_statuses","log_visit","new","new_board","page_visits","serialize","start_time","termination_token","token","try_from","try_into","type_id","vzip","run_app","AppStatusHook","BoardStatusHook","DropBoardHook","ListBoardsHook","NewBoardHook","StrikeHook","TerminationHook","app_status","board_status","drop_board","list_boards","locked_state","locked_state","locked_state","locked_state","locked_state","locked_state","locked_state","new_board","strike","termination","AppStatusHook","borrow","borrow_mut","call","from","into","locked_state","new","try_from","try_into","type_id","vzip","BoardStatusHook","borrow","borrow_mut","call","from","into","locked_state","new","try_from","try_into","type_id","vzip","DropBoardHook","borrow","borrow_mut","call","from","into","locked_state","new","try_from","try_into","type_id","vzip","ListBoardsHook","borrow","borrow_mut","call","from","into","locked_state","new","try_from","try_into","type_id","vzip","NewBoardHook","NewBoardParams","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","deserialize","eq","erased_serialize","fmt","from","from","height","into","into","locked_state","new","serialize","ship_count","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","width","StrikeHook","StrikeParams","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","deserialize","eq","erased_serialize","fmt","from","from","into","into","locked_state","new","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","x","y","TerminationHook","TerminationQuery","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","deserialize","error","fmt","from","from","into","into","locked_state","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","PageVisit","borrow","borrow_mut","client","clone","clone_into","deserialize","eq","erased_serialize","error","fmt","from","from_request_and_response","into","new","path","serialize","status_code","timestamp","to_owned","try_from","try_into","type_id","url","vzip","app_server","termination","create_app","TerminationToken","borrow","borrow_mut","default","fmt","from","into","new","notify","notify","result","submit_result","task","try_from","try_into","type_id","vzip","CommandLineParameters","addr","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","config","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","port","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","DATETIME_FORMAT","DEFAULT_ADDR","DEFAULT_BOARD_SIZE","DEFAULT_CONFIG_PATH","DEFAULT_PORT","DEFAULT_SHIP_COUNT","HostConfiguration","SHIP_GENERATION_MAX_RETRY","__private_field","_serde_offset_date_time","addr","borrow","borrow_mut","deref","from","host_config","into","port","serde_offset_date_time","try_from","try_into","type_id","vzip","OptionVisitor","Visitor","borrow","borrow","borrow_mut","borrow_mut","description","deserialize","expecting","expecting","fmt","fmt","from","from","into","into","option","serialize","try_from","try_from","try_into","try_into","type_id","type_id","visit_none","visit_some","visit_str","vzip","vzip","deserialize","serialize","HostConfiguration","addr","borrow","borrow_mut","clone","clone_into","default","deserialize","erased_serialize","fmt","from","into","port","resolve_with_args","serialize","to_owned","try_from","try_from_args","try_from_file","try_into","type_id","vzip","deserialize","serialize","AppError","ConfigNotParsable","ConfigNotReadable","CoordinatesOutOfBounds","CtrlCError","DebugOnlyFeature","DuplicatedBoard","FrozenBoard","InvalidBoard","InvalidParameters","JSONSerializationError","LockPoisoned","MissingBoard","MissingParameters","PositionOccupied","RemoteRequestedTermination","ServerStartUpError","StrikeReportRequestedOnEmpty","TideError","Unknown","borrow","borrow_mut","error_code","expand_variants","fmt","fmt","from","into","name","provide","to_string","try_from","try_into","type_id","vzip","addr","context","err","err","err","message","message","path","path","uuid","uuid","uuid","uuid_str","x","x","y","y","Critical","Debug","Error","Info","LogLevel","Trace","Warning","ansi_code","borrow","borrow_mut","critical","debug","error","expand_variants","format","from","info","into","log","name","suffix","trace","try_from","try_into","type_id","vzip","warning","wraps","AircraftCarrier","Battleship","Board","BoardStatus","CHAR_EMPTY","CHAR_MISSED","CHAR_SHIP_HIT","CHAR_SHIP_UNHIT","Coordinates","Cruiser","Discovered","Down","Empty","Frigate","Missed","Orientation","Position","Right","Ship","ShipHit","ShipIntel","ShipStatus","ShipType","ShipUnhit","Strike","StrikeReport","Submarine","Sunk","Undiscovered","active","board","board_status","coordinates","coordinates","coordinates","coordinates","damages","elapsed","frozen","hit","intel","orientation","orientation","position","position_index","ship","ship_intel","ship_intel","ship_status","ship_type","ship_type","ship_types","ships","ships_remaining","size","size","start_time","status","strike","strike_report","strikes","strikes","strikes","traits","uuid","uuid","uuid","uuid","uuid","uuid","x","y","Board","add_ship","add_strike","borrow","borrow_mut","deserialize","elapsed","erased_serialize","err_if_frozen","fmt","freeze","from","frozen","has_won","height","into","is_available","is_frozen","new","position_index","serialize","set_segment_state","set_slice_state","ship_intel","ships","ships_remaining","size","start_time","status","strike_count","strikes","try_from","try_into","type_id","uuid","uuid","vzip","width","BoardStatus","active","borrow","borrow_mut","clone","clone_into","deserialize","elapsed","erased_serialize","fmt","from","into","serialize","ship_intel","size","strikes","to_owned","try_from","try_from","try_into","type_id","uuid","vzip","Coordinates","borrow","borrow_mut","clone","clone_into","deserialize","eq","equivalent","erased_serialize","fmt","from","into","new","serialize","shift","shift_down","shift_right","to_owned","try_from","try_into","type_id","vzip","x","y","Down","Orientation","Right","borrow","borrow_mut","clone","clone_into","deserialize","erased_serialize","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","CHAR_EMPTY","CHAR_MISSED","CHAR_SHIP_HIT","CHAR_SHIP_UNHIT","Empty","Missed","Position","ShipHit","ShipUnhit","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","erased_serialize","fmt","fmt","from","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","Ship","add_to_board","borrow","borrow_mut","coordinates","damages","deserialize","eq","erased_serialize","fmt","from","into","length","orientation","orientation","serialize","ship_type","status","strike","strikes","try_from","try_into","type_id","uuid","uuid","vzip","x","y","ShipIntel","borrow","borrow_mut","clone","clone_into","damages","deserialize","erased_serialize","fmt","from","into","serialize","ship_type","status","to_owned","try_from","try_from","try_into","type_id","uuid","vzip","Discovered","ShipStatus","Sunk","Undiscovered","borrow","borrow_mut","clone","clone_into","deserialize","eq","equivalent","erased_serialize","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","AircraftCarrier","Battleship","Cruiser","Frigate","ShipType","Submarine","borrow","borrow_mut","clone","clone_into","colour_wraps","deserialize","erased_serialize","expand_types","fmt","from","into","label","length","serialize","to_owned","try_from","try_into","type_id","vzip","Strike","borrow","borrow_mut","clone","clone_into","coordinates","coordinates","deserialize","eq","erased_serialize","fmt","from","into","new","serialize","to_owned","try_from","try_into","type_id","uuid","uuid","vzip","x","y","StrikeReport","borrow","borrow_mut","clone","clone_into","coordinates","deserialize","erased_serialize","fmt","from","hit","intel","into","new","serialize","ships_remaining","to_owned","try_from","try_from_position","try_into","type_id","uuid","vzip","with_ships_remaining","IsAppHook","QueryParams","ResponseBuilder","Segment","build_response","is_app_hook","length","new","orientation","query_params","response_builder","segment","x","y","IsAppHook","new","QueryParams","parse_req","parse_req","ResponseBuilder","build_response","Segment","coordinates","coordinates","get","get","iter","iter","iterator","length","orientation","slice","slice","x","y","IterSegment","borrow","borrow_mut","count","from","into","into_iter","new","next","segment","try_from","try_into","type_id","vzip"],"q":[[0,"battleship"],[7,"battleship::app"],[29,"battleship::app::app_hook"],[42,"battleship::app::app_state"],[70,"battleship::app::base"],[71,"battleship::app::hooks"],[92,"battleship::app::hooks::app_status"],[104,"battleship::app::hooks::board_status"],[116,"battleship::app::hooks::drop_board"],[128,"battleship::app::hooks::list_boards"],[140,"battleship::app::hooks::new_board"],[172,"battleship::app::hooks::strike"],[203,"battleship::app::hooks::termination"],[230,"battleship::app::page_visit"],[255,"battleship::app::tasks"],[257,"battleship::app::tasks::app_server"],[258,"battleship::app::tasks::termination"],[275,"battleship::args"],[297,"battleship::config"],[320,"battleship::config::_serde_offset_date_time"],[349,"battleship::config::_serde_offset_date_time::option"],[351,"battleship::config::host_config"],[373,"battleship::config::serde_offset_date_time"],[375,"battleship::error"],[410,"battleship::error::AppError"],[427,"battleship::logger"],[455,"battleship::models"],[527,"battleship::models::board"],[565,"battleship::models::board_status"],[588,"battleship::models::coordinates"],[612,"battleship::models::orientation"],[630,"battleship::models::position"],[658,"battleship::models::ship"],[686,"battleship::models::ship_intel"],[707,"battleship::models::ship_status"],[728,"battleship::models::ship_types"],[753,"battleship::models::strike"],[777,"battleship::models::strike_report"],[801,"battleship::models::traits"],[815,"battleship::models::traits::is_app_hook"],[817,"battleship::models::traits::query_params"],[820,"battleship::models::traits::response_builder"],[822,"battleship::models::traits::segment"],[836,"battleship::models::traits::segment::iterator"]],"d":["","","","","","","A collection of structs.","An <code>AppHook</code> that wraps a <code>tide::Endpoint</code>, allowing something …","","","","Stores the state of the app.","","","","","","Hooks to be added to the tide App.","","","","","Starts the host app.","","","Tasks creating Async futures","","","","An <code>AppHook</code> that wraps a <code>tide::Endpoint</code>, allowing something …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Wraps an <code>IsAppHook</code>+<code>tide::Endpoint</code> to create a","","","","","","Add a new <code>Board</code> and insert it into the this app.","","","","Create a default <code>AppState</code> using the current UTC time.","","Drop a board by <code>Uuid</code>.","The <code>time::Duration</code> that had elapsed since the start of the …","","","Returns the argument unchanged.","Get a board by <code>Uuid</code>.","Get a <code>BoardStatus</code> by <code>Uuid</code>.","Calls <code>U::from(self)</code>.","List all the games.","Log visit.","Create a default <code>AppState</code> using the current UTC time.","Create a new <code>Board</code> and insert it into this app.","","","","","Get a new <code>Arc</code> reference to the internal termination token.","","","","","Starts the host app.","<code>Endpoint</code> for creating a new board.","<code>Endpoint</code> for creating a new board.","<code>Endpoint</code> for creating a new board.","<code>Endpoint</code> for creating a new board.","<code>Endpoint</code> for creating a new board.","<code>Endpoint</code> for creating a new board.","","","","","","","","","","","","","","","","<code>Endpoint</code> for creating a new board.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>AppStatusHook</code> from a <code>AppState</code>.","","","","","<code>Endpoint</code> for creating a new board.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>BoardStatusHook</code> from a <code>AppState</code>.","","","","","<code>Endpoint</code> for creating a new board.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>DropBoardHook</code> from a <code>AppState</code>.","","","","","<code>Endpoint</code> for creating a new board.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>ListBoardsHook</code> from a <code>AppState</code>.","","","","","<code>Endpoint</code> for creating a new board.","Parameters for the above <code>Endpoint</code>.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new <code>NewBoardHook</code> from a <code>AppState</code> behind a <code>RwLock</code>.","","","","","","","","","","","","","<code>Endpoint</code> for creating a new board.","Parameters for the above <code>Endpoint</code>.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new <code>StrikeHook</code> from a <code>AppState</code>.","","","","","","","","","","","","","","Possible queries for the <code>TerminationHook</code> <code>Endpoint</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new <code>TerminationHook</code> from a <code>AppState</code> behind an …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Create a <code>PageVisit</code> instance from a pair of <code>tide::Request</code> …","Calls <code>U::from(self)</code>.","Create a <code>PageVisit</code> instance from raw components.","","","","","","","","","","","","","Create the app an populate it with the routes we need.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new <code>TerminationToken</code> for termination signaling …","Notify this <code>TerminationToken</code> to end.","","","Replace the current result embedded in this …","The coroutine to listen for any termination notifications.","","","","","Simple program to greet a person","Binds the host to a custom hosting address.","","","","","","","Sets a custom JSON config file. Defaults to <code>./host.json</code>.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Binds the host to this custom port.","","","","","","","The default datetime format for use in this app.","","","","","","","Maximum number of retries for each ship before we give up.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Serialize and Deserialize module for <code>DATETIME_FORMAT</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A collection of all possible errors raised by the app.","","","","","","","","","","","","","","","","","","","","","","Get the HTTP Status code for this error.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Get the name of this error.","","","","","","","","","","","","","","","","","","","","","","","","","","","","An enum for different log levels that appears differently.","","","Return the ANSI 8-bit colour code for this level.","","","Write a log line to <code>stderr</code> at the  Critical level.","Write a log line to <code>stderr</code> at the  Debug level.","Write a log line to <code>stderr</code> at the  Error level.","","Format a string for the requested level.","Returns the argument unchanged.","Write a log line to <code>stderr</code> at the  Info level.","Calls <code>U::from(self)</code>.","Log a string to <code>stderr</code> for the requested level.","Return the name for this level.","Return the suffix for this level.","Write a log line to <code>stderr</code> at the  Trace level.","","","","","Write a log line to <code>stderr</code> at the  Warning level.","Wraps the string in the corresponding colour.","","","","A brief summary of the status of the board.","","","","","Denotes the position of on a board.","","","","","","","Orientation of the ship.","Indicates the state of a position on the grid.","","","","An abridged status of a <code>Ship</code> for the purpose of returning …","Orientation of the ship.","All possible ship types.","","Recording a <code>Strike</code>.","A report for a strike, formatted for export.","","","","","","","","","","","","","","","","Defines orientation on the board.","","","","","","","Defines orientation on the board.","","","Possible types of ships.","","","","","","","","","","","","","","","","","","","","","","Takes ownership of a ship, and attempt to add it to the …","Takes ownership of a <code>Strike</code>, then perform the strike onto …","","","","The <code>time::Duration</code> that had elapsed since the start of the …","","Return an <code>Err</code> if frozen.","","Freeze this <code>Board</code>.","Returns the argument unchanged.","","Check if the player has won.","The height of this board.","Calls <code>U::from(self)</code>.","Check the availability of the positions specified.","Return if this <code>Board</code> is frozen.","Create a new <code>Board</code> instance.","","","Set state of some coordinates on the board to a specific …","Set a slice of the board to a specific state.","Returns a report of all the ships statuses without giving …","","Return the number of ships remaining.","","","Return a public <code>BoardStatus</code> for this board.","Count the number of <code>Strike</code>s on this <code>Board</code>.","","","","","Get the identifier of a <code>Strike</code>.","","","The width of this board.","A brief summary of the status of the board.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Denotes the position of on a board.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new <code>Coordinates</code>.","","Create a new <code>Coordinates</code> by shifting.","Create a new <code>Coordinates</code> by shifting downwards.","Create a new <code>Coordinates</code> by shifting rightwards.","","","","","","","","","Orientation of the ship.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Indicates the state of a position on the grid.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Randomly generate a ship.","","","","Count the number of strikes this <code>Ship</code> had sustained.","","Check if the two ships are the same.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Return the length of the ship.","Return the orientation of the ship.","","","","Return the current status of the ship.","Attempts to strike the ship.","","","","","Get the identifier of a <code>Strike</code>.","","","Return the x position of the ship.","Return the y position of the ship.","An abridged status of a <code>Ship</code> for the purpose of returning …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Orientation of the ship.","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","All possible ship types.","","","","","","Wraps the &amp;<code>str</code> with the designated colour.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Get the label of this ship type.","Get the length of this ship type.","","","","","","","Recording a <code>Strike</code>.","","","","","Return the coordinates of the strike.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Instantiate a new <code>Strike</code> object.","","","","","","Get the identifier of a <code>Strike</code>.","","","Return the x position of the strike.","Return the y position of the strike.","A report for a strike, formatted for export.","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Create a new <code>StrikeReport</code> from raw data.","","","","","Try create a <code>StrikeReport</code> from a <code>Coordinates</code>.","","","","","Add a value to <code>ships_remaining</code>.","","A trait for anything that can be used as a URL query.","","A trait for structs that is linear on the board - has a …","Build a <code>tide::Response</code> from this instance.","","Return the length of the segment.","Create a new instance from a <code>AppState</code> behind a <code>RwLock</code>.","Return the orientation of the segment.","","","","Return the x position of the segment.","Return the y position of the segment.","","Create a new instance from a <code>AppState</code> behind a <code>RwLock</code>.","A trait for anything that can be used as a URL query.","Try parse a <code>tide::Request</code> instance.","Try parse a <code>tide::Request</code> instance.","","Build a <code>tide::Response</code> from this instance.","A trait for structs that is linear on the board - has a …","Returns the starting coordinates in an array.","Returns the starting coordinates in an array.","Returns the <code>n</code>-th <code>Coordinates</code> of this <code>Segment</code>.","Returns the <code>n</code>-th <code>Coordinates</code> of this <code>Segment</code>.","Iterate through the <code>Coordinates</code> in this <code>Segment</code>.","Iterate through the <code>Coordinates</code> in this <code>Segment</code>.","","Return the length of the segment.","Return the orientation of the segment.","Returns the <code>SliceInfo</code> representing this <code>Segment</code>.","Returns the <code>SliceInfo</code> representing this <code>Segment</code>.","Return the x position of the segment.","Return the y position of the segment.","A special iterator class for iterating <code>Coordinates</code> through …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>IterSegment</code> from something that implements …","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,13,29,8,29,0,8,0,13,29,0,13,29,0,13,29,29,0,8,8,8,8,8,8,8,8,8,8,8,8,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,35,36,37,38,39,42,44,0,0,0,0,35,35,35,35,35,35,35,35,35,35,35,0,36,36,36,36,36,36,36,36,36,36,36,0,37,37,37,37,37,37,37,37,37,37,37,0,38,38,38,38,38,38,38,38,38,38,38,0,0,39,40,39,40,39,40,40,40,40,40,40,39,40,40,39,40,39,39,40,40,40,39,40,39,40,39,40,39,40,40,0,0,42,43,42,43,42,43,43,43,43,43,43,42,43,42,43,42,42,43,43,42,43,42,43,42,43,42,43,43,43,0,0,44,45,44,45,44,45,45,45,45,45,44,45,44,45,44,44,45,44,45,44,45,44,45,44,45,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,0,0,0,0,0,55,0,3,55,55,55,55,0,55,3,0,55,55,55,55,0,0,61,62,61,62,0,0,61,62,61,62,61,62,61,62,0,0,61,62,61,62,61,62,62,62,61,61,62,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,89,90,91,92,89,93,94,91,92,95,96,97,98,99,100,99,100,70,70,70,70,0,70,70,70,70,70,0,0,0,0,70,70,0,70,70,70,70,0,70,70,70,70,0,70,84,84,0,0,0,0,0,0,0,84,83,76,77,84,77,0,0,76,0,77,0,0,0,77,0,0,84,83,83,27,0,0,0,72,73,74,81,27,18,74,74,0,72,0,18,0,0,27,0,72,81,0,18,74,18,27,18,81,0,0,18,27,72,0,18,27,72,81,73,74,75,75,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,76,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,0,0,0,77,77,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,83,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,84,84,84,84,0,84,84,84,84,84,84,84,84,0,84,84,84,84,84,84,84,84,84,84,84,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,0,0,0,101,0,88,16,88,0,0,0,88,88,0,16,0,102,102,0,101,0,88,88,88,88,88,88,0,88,88,88,88,88,88,0,87,87,87,87,87,87,87,87,87,87,87,87,87],"f":[0,0,0,0,0,[[],[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3,[[2,[1]]]],0,0,0,0,0,0,0,[[]],[[]],[[[8,[[7,[[0,[4,5,6]]]]]],[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],0,[[]],[[]],0,[[[15,[[14,[13]]]]],[[8,[16]]]],[[],2],[[],2],[[],17],[[]],0,[[13,18],[[2,[19,1]]]],0,[[]],[[]],[[],13],[20,[[2,[13]]]],[[13,19],[[2,[18,1]]]],[13,21],[22,[[2,[23,24]]]],[[13,25],26],[[]],[[13,19],[[2,[[14,[18]],1]]]],[[13,19],[[2,[27,1]]]],[[]],[13,[[2,[[28,[27]],1]]]],[[13,29]],[[],13],[[13,[31,[30]],32],[[2,[27,1]]]],0,[[13,33],2],0,0,[13,[[15,[34]]]],[[],2],[[],2],[[],17],[[]],[3,[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[35,[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],[[]],[[]],0,[[[15,[[14,[13]]]]],35],[[],2],[[],2],[[],17],[[]],0,[[]],[[]],[[36,[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],[[]],[[]],0,[[[15,[[14,[13]]]]],36],[[],2],[[],2],[[],17],[[]],0,[[]],[[]],[[37,[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],[[]],[[]],0,[[[15,[[14,[13]]]]],37],[[],2],[[],2],[[],17],[[]],0,[[]],[[]],[[38,[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],[[]],[[]],0,[[[15,[[14,[13]]]]],38],[[],2],[[],2],[[],17],[[]],0,0,[[]],[[]],[[]],[[]],[[39,[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],[40,40],[[]],[20,[[2,[40]]]],[[40,40],41],[22,[[2,[23,24]]]],[[40,25],26],[[]],[[]],0,[[]],[[]],0,[[[15,[[14,[13]]]]],39],[[40,33],2],0,[[]],[[],2],[[],2],[[],2],[[],2],[[],17],[[],17],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[42,[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],[43,43],[[]],[20,[[2,[43]]]],[[43,43],41],[22,[[2,[23,24]]]],[[43,25],26],[[]],[[]],[[]],[[]],0,[[[15,[[14,[13]]]]],42],[[43,33],2],[[]],[[],2],[[],2],[[],2],[[],2],[[],17],[[],17],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[44,[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],[45,45],[[]],[20,[[2,[45]]]],0,[[45,25],26],[[]],[[]],[[]],[[]],0,[[[15,[[14,[13]]]]],44],[[]],[[],2],[[],2],[[],2],[[],2],[[],17],[[],17],[[]],[[]],0,[[]],[[]],0,[29,29],[[]],[20,[[2,[29]]]],[[29,29],41],[22,[[2,[23,24]]]],0,[[29,25],26],[[]],[[[9,[[0,[4,5,6]]]],46],29],[[]],[[[48,[47]],47,47,46],29],0,[[29,33],2],0,0,[[]],[[],2],[[],2],[[],17],0,[[]],0,0,[13,49],0,[[]],[[]],[[],34],[[34,25],26],[[]],[[]],[[],34],[[34,[2,[1]]]],0,0,[[34,[2,[1]]],[[48,[[2,[1]]]]]],[[[15,[34]]],[[2,[1]]]],[[],2],[[],2],[[],17],[[]],0,0,[50,50],[50,50],[[]],[[]],[[],50],[[],50],0,[[51,25],26],[[]],[52,[[2,[51,53]]]],[52,[[2,[51,53]]]],[[],[[48,[54]]]],[[]],0,[[],2],[[],2],[[],17],[[51,52],[[2,[53]]]],[[51,52],[[2,[53]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[55,[[57,[56]]]],[[]],0,[[]],0,0,[[],2],[[],2],[[],17],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[0,[58,59]]]],[20,[[2,[60]]]],[[61,25],26],[[62,25],26],[25,[[2,[63]]]],[25,[[2,[63]]]],[[]],[[]],[[]],[[]],0,[[60,33],2],[[],2],[[],2],[[],2],[[],2],[[],17],[[],17],[62,[[2,[[48,[60]],64]]]],[[62,20],[[2,[[48,[60]]]]]],[[61,65],[[2,[60,64]]]],[[]],[[]],[20,[[2,[[48,[60]]]]]],[[[48,[60]],33],2],0,0,[[]],[[]],[3,3],[[]],[[],3],[20,[[2,[3]]]],[22,[[2,[23,24]]]],[[3,25],26],[[]],[[]],0,[[3,51],3],[[3,33],2],[[]],[[],2],[51,[[2,[3,1]]]],[[[67,[66]]],[[2,[3,1]]]],[[],2],[[],17],[[]],[20,[[2,[60]]]],[[60,33],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,68],0,[[1,25],26],[[1,25],26],[[]],[[]],[1,47],[69],[[],47],[[],2],[[],2],[[],17],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[70,71],[[]],[[]],[65],[65],[65],0,[[70,65],47],[[]],[65],[[]],[[70,65]],[70,65],[70,65],[65],[[],2],[[],2],[[],17],[[]],[65],[[70,41,65],47],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[18,72],[[2,[1]]]],[[18,73],[[2,[74,1]]]],[[]],[[]],[20,[[2,[18]]]],[18,21],[22,[[2,[23,24]]]],[18,[[2,[1]]]],[[18,25],26],[18],[[]],0,[18,[[2,[41,1]]]],[18,30],[[]],[[18,75,76,30],41],[18,41],[[[31,[30]],32],18],0,[[18,33],2],[[18,75,76,30,77]],[[18,[80,[[31,[78]],79,79]],77]],[18,[[2,[[28,[81]],1]]]],0,[18,[[2,[30,1]]]],0,0,[18,[[2,[27,1]]]],[18,30],0,[[],2],[[],2],[[],17],[18,19],0,[[]],[18,30],0,0,[[]],[[]],[27,27],[[]],[20,[[2,[27]]]],0,[22,[[2,[23,24]]]],[[27,25],26],[[]],[[]],[[27,33],2],0,0,0,[[]],[[],2],[18,[[2,[27]]]],[[],2],[[],17],0,[[]],0,[[]],[[]],[75,75],[[]],[20,[[2,[75]]]],[[75,75],41],[[],41],[22,[[2,[23,24]]]],[[75,25],26],[[]],[[]],[[30,30],75],[[75,33],2],[[75,76,82],75],[[75,82],75],[[75,82],75],[[]],[[],2],[[],2],[[],17],[[]],0,0,0,0,0,[[]],[[]],[76,76],[[]],[20,[[2,[76]]]],[22,[[2,[23,24]]]],[[76,25],26],[[]],[[]],[[76,33],2],[[]],[[],2],[[],2],[[],17],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[77,77],[[]],[[],77],[20,[[2,[77]]]],[[77,77],41],[22,[[2,[23,24]]]],[[77,25],26],[[77,25],26],[[]],[[]],[[77,33],2],[[]],[[],47],[[],2],[[],2],[[],17],[[]],0,[18,41],[[]],[[]],0,[72,[[2,[30,1]]]],[20,[[2,[72]]]],[[72,72],41],[22,[[2,[23,24]]]],[[72,25],26],[[]],[[]],[72,30],[72,76],0,[[72,33],2],0,[72,[[2,[83,1]]]],[[72,[15,[73]]],[[2,[41,1]]]],0,[[],2],[[],2],[[],17],[72,19],0,[[]],[72,30],[72,30],0,[[]],[[]],[81,81],[[]],0,[20,[[2,[81]]]],[22,[[2,[23,24]]]],[[81,25],26],[[]],[[]],[[81,33],2],0,0,[[]],[[],2],[72,[[2,[81]]]],[[],2],[[],17],0,[[]],0,0,0,0,[[]],[[]],[83,83],[[]],[20,[[2,[83]]]],[[83,83],41],[[],41],[22,[[2,[23,24]]]],[[83,25],26],[[]],[[]],[[83,33],2],[[]],[[],2],[[],2],[[],17],[[]],0,0,0,0,0,0,[[]],[[]],[84,84],[[]],[[84,65],47],[20,[[2,[84]]]],[22,[[2,[23,24]]]],0,[[84,25],26],[[]],[[]],[84,65],[84,30],[[84,33],2],[[]],[[],2],[[],2],[[],17],[[]],0,[[]],[[]],[73,73],[[]],[73,[[31,[30]]]],0,[20,[[2,[73]]]],[[73,73],41],[22,[[2,[23,24]]]],[[73,25],26],[[]],[[]],[75,73],[[73,33],2],[[]],[[],2],[[],2],[[],17],[73,19],0,[[]],[73,30],[73,30],0,[[]],[[]],[74,74],[[]],0,[20,[[2,[74]]]],[22,[[2,[23,24]]]],[[74,25],26],[[]],0,0,[[]],[[19,75,41,[48,[81]],[48,[30]]],74],[[74,33],2],0,[[]],[[],2],[[77,41],[[2,[74,1]]]],[[],2],[[],17],0,[[]],[[74,30],74],0,0,0,0,[[],85],0,[[],30],[[[15,[[14,[13]]]]]],[[],76],0,0,0,[[],30],[[],30],0,[[[15,[[14,[13]]]]]],0,[9,[[2,[1]]]],[9,[[2,[1]]]],0,[[],85],0,[[],[[31,[30]]]],[[],[[31,[30]]]],[30,[[48,[75]]]],[30,[[48,[75]]]],[86,[[87,[86]]]],[86,[[87,[86]]]],0,[[],30],[[],76],[[],[[80,[[31,[78]],79,79]]]],[[],[[80,[[31,[78]],79,79]]]],[[],30],[[],30],0,[[]],[[]],0,[[]],[[]],[[]],[88,[[87,[88]]]],[[[87,[88]]],48],0,[[],2],[[],2],[[],17],[[]]],"c":[],"p":[[4,"AppError"],[4,"Result"],[3,"HostConfiguration"],[8,"Clone"],[8,"Send"],[8,"Sync"],[8,"Endpoint"],[3,"AppHook"],[3,"Request"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"AppState"],[3,"RwLock"],[3,"Arc"],[8,"IsAppHook"],[3,"TypeId"],[3,"Board"],[3,"Uuid"],[8,"Deserializer"],[3,"Duration"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"BoardStatus"],[3,"Vec"],[3,"PageVisit"],[15,"usize"],[15,"array"],[15,"u16"],[8,"Serializer"],[3,"TerminationToken"],[3,"AppStatusHook"],[3,"BoardStatusHook"],[3,"DropBoardHook"],[3,"ListBoardsHook"],[3,"NewBoardHook"],[3,"NewBoardParams"],[15,"bool"],[3,"StrikeHook"],[3,"StrikeParams"],[3,"TerminationHook"],[3,"TerminationQuery"],[6,"Result"],[3,"String"],[4,"Option"],[3,"Server"],[3,"Command"],[3,"CommandLineParameters"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"DATETIME_FORMAT"],[4,"BorrowedFormatItem"],[15,"slice"],[8,"Formattable"],[8,"Parsable"],[3,"OffsetDateTime"],[3,"Visitor"],[3,"OptionVisitor"],[3,"Error"],[8,"Error"],[15,"str"],[3,"Path"],[8,"AsRef"],[4,"StatusCode"],[3,"Demand"],[4,"LogLevel"],[15,"u8"],[3,"Ship"],[3,"Strike"],[3,"StrikeReport"],[3,"Coordinates"],[4,"Orientation"],[4,"Position"],[4,"SliceInfoElem"],[6,"Ix2"],[3,"SliceInfo"],[3,"ShipIntel"],[15,"i64"],[4,"ShipStatus"],[4,"ShipType"],[3,"Response"],[8,"Sized"],[3,"IterSegment"],[8,"Segment"],[13,"ServerStartUpError"],[13,"Unknown"],[13,"ConfigNotReadable"],[13,"ConfigNotParsable"],[13,"CtrlCError"],[13,"RemoteRequestedTermination"],[13,"DuplicatedBoard"],[13,"MissingBoard"],[13,"FrozenBoard"],[13,"InvalidBoard"],[13,"PositionOccupied"],[13,"CoordinatesOutOfBounds"],[8,"ResponseBuilder"],[8,"QueryParams"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
