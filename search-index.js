var searchIndex = JSON.parse('{\
"battleship":{"doc":"Battleship game","t":"AAAAAAFAADDDAAAMMMMAMAMMFMMMAMMMDLLLMLLMLLLLLDLMLLLLLLLLLLLLLLLLLLLMLMMMLLLLLFDDDDDDDDDAAAAAMMMMMMMMAFAAADLLLLLMLLLLLDLLLLLMLLLLLDLLLLLMLLLLLDLLLLLMLLLLLDLLLLLMLLLLLDDLLLLLLLLLLLLLLMLLMLLMLLLLLLLLLMRDLLLLLLLLLFLLLLDDLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMDDLLLLLLLLMLLLLLMLLLLLLLLLLDLLMLLLLLLMLLLLLMLMMLLLLMLAAFDLLLLLLLLMMLLLLLLDMLLLLLLMLLLLLLMMLLLLLLDRRRRRRDRMAMLLLLALMAMLLLLDDLLLLFFLLLLLLLLAFLLLLLLLLLLLFFDMLLLLLLLLLLLMLLMLLLLLLLFFENNNNNNNNNNNNNNNNNNNLLLOLLLLLLLLLLMMMMMMMMMMMMMMMMMNNNNENNLLLFFFOLLFLLLLFLLLLFLNNDDRRRRDNNNNNNEENDNDEENDDNNNMAAAMMMMMMMMAMAMMAAMAMMAMMMMMMAAMMMAMMMMMMMMDLLLLLLLLLLLLMLLLLLLMLLLLMLMMLLLMLLLLMLLDMLLLLLLMLLLLLMMMLLLLLMLDLLLLLLLLLLLLLLLLLLLLLMMNENLLLLLLLLLLLLLLLLRRRRNNENNLLLLLLLLLLLLLLLLLLLLDLLLMLLLLLLLLLLMLMLLMLLLLMLLLDLLLLMLLLLLLMLMMLLLLLMLNENNLLLLLLLLLLLLLLLLLNNNNENLLLLLLLLOLLLLLLLLLLLDLLLLLMLLLLLLLLLLLLLLMLLLDLLLLMLLLLLMMLLLMLLLLLMLLIIIIIAKKAKKKAAAKKIKIKILLIKILLLLLLAKKLLKKDLLMLLLLLMLLLL","n":["_doc","app","args","config","error","logger","main","models","hostjson","AppHook","AppState","PageVisit","app_hook","app_state","base","boards","client","end_point","error","hooks","locked_state","page_visit","page_visits","path","run_app","simulated_failure_factor","start_time","status_code","tasks","termination_token","timestamp","url","AppHook","borrow","borrow_mut","call","end_point","from","into","locked_state","new","try_from","try_into","type_id","vzip","AppState","add_board","boards","borrow","borrow_mut","configure","default","deserialize","do_erased_serialize","drop_board","elapsed","erased_serialize","fmt","from","get_board","get_board_status","get_board_strikes","into","list_board_statuses","log_visit","new","new_board","page_visits","serialize","simulated_failure_factor","start_time","termination_token","token","try_from","try_into","type_id","vzip","run_app","AppStatusHook","BoardStatusHook","DropBoardHook","ListBoardsHook","ListStrikesHook","NewBoardHook","SimulatedFailureHook","StrikeHook","TerminationHook","app_status","board_status","drop_board","list_boards","list_strikes","locked_state","locked_state","locked_state","locked_state","locked_state","locked_state","locked_state","locked_state","new_board","should_fail","simulated_failure","strike","termination","AppStatusHook","borrow","borrow_mut","call","from","into","locked_state","new","try_from","try_into","type_id","vzip","BoardStatusHook","borrow","borrow_mut","call","from","into","locked_state","new","try_from","try_into","type_id","vzip","DropBoardHook","borrow","borrow_mut","call","from","into","locked_state","new","try_from","try_into","type_id","vzip","ListBoardsHook","borrow","borrow_mut","call","from","into","locked_state","new","try_from","try_into","type_id","vzip","ListStrikesHook","borrow","borrow_mut","call","from","into","locked_state","new","try_from","try_into","type_id","vzip","NewBoardHook","NewBoardParams","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","from","height","into","into","locked_state","new","serialize","ship_count","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","width","REQUEST_TIMEOUT","SimulatedFailureHook","borrow","borrow_mut","call","create_bad_gateway","create_request_timeout","default","from","into","new","should_fail","try_from","try_into","type_id","vzip","StrikeHook","StrikeParams","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","from","into","into","locked_state","new","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","x","y","TerminationHook","TerminationQuery","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","deserialize","error","fmt","from","from","into","into","locked_state","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","PageVisit","borrow","borrow_mut","client","clone","clone_into","deserialize","do_erased_serialize","eq","erased_serialize","error","fmt","from","from_request_and_response","into","new","path","serialize","status_code","timestamp","to_owned","try_from","try_into","type_id","url","vzip","app_server","termination","create_app","TerminationToken","borrow","borrow_mut","default","fmt","from","into","new","notify","notify","result","submit_result","task","try_from","try_into","type_id","vzip","CommandLineParameters","addr","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","config","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","port","simulated_failure_factor","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","DATETIME_FORMAT","DEFAULT_ADDR","DEFAULT_BOARD_SIZE","DEFAULT_CONFIG_PATH","DEFAULT_PORT","DEFAULT_SHIP_COUNT","DEFAULT_SIMULATED_FAILURE_FACTOR","HostConfiguration","SHIP_GENERATION_MAX_RETRY","__private_field","_serde_offset_date_time","addr","borrow","borrow_mut","deref","from","host_config","into","port","serde_offset_date_time","simulated_failure_factor","try_from","try_into","type_id","vzip","OptionVisitor","Visitor","borrow","borrow","borrow_mut","borrow_mut","description","deserialize","expecting","expecting","fmt","fmt","from","from","into","into","option","serialize","try_from","try_from","try_into","try_into","type_id","type_id","visit_none","visit_some","visit_str","vzip","vzip","deserialize","serialize","HostConfiguration","addr","borrow","borrow_mut","clone","clone_into","default","deserialize","do_erased_serialize","erased_serialize","fmt","from","into","port","resolve_with_args","serialize","simulated_failure_factor","to_owned","try_from","try_from_args","try_from_file","try_into","type_id","vzip","deserialize","serialize","AppError","ConfigNotParsable","ConfigNotReadable","CoordinatesOutOfBounds","CtrlCError","DebugOnlyFeature","DuplicatedBoard","FrozenBoard","InvalidBoard","InvalidParameters","JSONSerializationError","LockPoisoned","MissingBoard","MissingParameters","PositionOccupied","RemoteRequestedTermination","ServerStartUpError","StrikeReportRequestedOnEmpty","TideError","Unknown","borrow","borrow_mut","error_code","expand_variants","fmt","fmt","from","into","name","to_string","try_from","try_into","type_id","vzip","addr","context","err","err","err","message","message","path","path","uuid","uuid","uuid","uuid_str","x","x","y","y","Critical","Debug","Error","Info","LogLevel","Trace","Warning","ansi_code","borrow","borrow_mut","critical","debug","error","expand_variants","format","from","info","into","log","name","suffix","trace","try_from","try_into","type_id","vzip","warning","wraps","AircraftCarrier","Battleship","Board","BoardStatus","CHAR_EMPTY","CHAR_MISSED","CHAR_SHIP_HIT","CHAR_SHIP_UNHIT","Coordinates","Cruiser","Discovered","Down","Empty","Frigate","Missed","Orientation","Position","Right","Ship","ShipHit","ShipIntel","ShipStatus","ShipType","ShipUnhit","Strike","StrikeReport","Submarine","Sunk","Undiscovered","active","board","board_status","coordinates","coordinates","coordinates","coordinates","damages","elapsed","frozen","hit","intel","orientation","orientation","position","position_index","remaining","ship","ship_intel","ship_intel","ship_status","ship_type","ship_type","ship_types","ships","ships_remaining","size","size","start_time","status","strike","strike_report","strikes","strikes","strikes","traits","uuid","uuid","uuid","uuid","uuid","uuid","x","y","Board","add_ship","add_strike","borrow","borrow_mut","deserialize","do_erased_serialize","elapsed","erased_serialize","err_if_frozen","fmt","freeze","from","frozen","has_won","height","into","is_available","is_frozen","new","position_index","serialize","set_segment_state","set_slice_state","ship_intel","ships","ships_remaining","size","start_time","status","strike_count","strike_reports","strikes","try_from","try_into","type_id","uuid","uuid","vzip","width","BoardStatus","active","borrow","borrow_mut","clone","clone_into","deserialize","do_erased_serialize","elapsed","erased_serialize","fmt","from","into","serialize","ship_intel","size","strikes","to_owned","try_from","try_from","try_into","type_id","uuid","vzip","Coordinates","borrow","borrow_mut","clone","clone_into","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","into","new","serialize","shift","shift_down","shift_right","to_owned","try_from","try_into","type_id","vzip","x","y","Down","Orientation","Right","borrow","borrow_mut","clone","clone_into","deserialize","do_erased_serialize","erased_serialize","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","CHAR_EMPTY","CHAR_MISSED","CHAR_SHIP_HIT","CHAR_SHIP_UNHIT","Empty","Missed","Position","ShipHit","ShipUnhit","borrow","borrow_mut","clone","clone_into","default","deserialize","do_erased_serialize","eq","erased_serialize","fmt","fmt","from","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","Ship","add_to_board","borrow","borrow_mut","coordinates","damages","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","into","length","orientation","orientation","serialize","ship_type","status","strike","strikes","try_from","try_into","type_id","uuid","uuid","vzip","x","y","ShipIntel","borrow","borrow_mut","clone","clone_into","damages","deserialize","do_erased_serialize","erased_serialize","fmt","from","into","remaining","serialize","ship_type","status","to_owned","try_from","try_from","try_into","type_id","uuid","vzip","Discovered","ShipStatus","Sunk","Undiscovered","borrow","borrow_mut","clone","clone_into","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","AircraftCarrier","Battleship","Cruiser","Frigate","ShipType","Submarine","borrow","borrow_mut","clone","clone_into","colour_wraps","deserialize","do_erased_serialize","erased_serialize","expand_types","fmt","from","into","label","length","serialize","to_owned","try_from","try_into","type_id","vzip","Strike","borrow","borrow_mut","clone","clone_into","coordinates","coordinates","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","into","new","serialize","to_owned","try_from","try_into","type_id","uuid","uuid","vzip","x","y","StrikeReport","borrow","borrow_mut","clone","clone_into","coordinates","deserialize","do_erased_serialize","erased_serialize","fmt","from","hit","intel","into","new","serialize","ships_remaining","to_owned","try_from","try_from_position","try_into","type_id","uuid","vzip","with_ships_remaining","AddDefaultHeaders","IsAppHook","QueryParams","ResponseBuilder","Segment","add_default_headers","add_default_headers","build_response","is_app_hook","length","new","orientation","query_params","response_builder","segment","x","y","AddDefaultHeaders","add_default_headers","IsAppHook","new","QueryParams","parse_req","parse_req","ResponseBuilder","build_response","Segment","coordinates","coordinates","get","get","iter","iter","iterator","length","orientation","slice","slice","x","y","IterSegment","borrow","borrow_mut","count","from","into","into_iter","new","next","segment","try_from","try_into","type_id","vzip"],"q":[[0,"battleship"],[8,"battleship::_doc"],[9,"battleship::app"],[32,"battleship::app::app_hook"],[45,"battleship::app::app_state"],[77,"battleship::app::base"],[78,"battleship::app::hooks"],[105,"battleship::app::hooks::app_status"],[117,"battleship::app::hooks::board_status"],[129,"battleship::app::hooks::drop_board"],[141,"battleship::app::hooks::list_boards"],[153,"battleship::app::hooks::list_strikes"],[165,"battleship::app::hooks::new_board"],[198,"battleship::app::hooks::simulated_failure"],[214,"battleship::app::hooks::strike"],[246,"battleship::app::hooks::termination"],[273,"battleship::app::page_visit"],[299,"battleship::app::tasks"],[301,"battleship::app::tasks::app_server"],[302,"battleship::app::tasks::termination"],[319,"battleship::args"],[342,"battleship::config"],[367,"battleship::config::_serde_offset_date_time"],[396,"battleship::config::_serde_offset_date_time::option"],[398,"battleship::config::host_config"],[422,"battleship::config::serde_offset_date_time"],[424,"battleship::error"],[458,"battleship::error::AppError"],[475,"battleship::logger"],[503,"battleship::models"],[576,"battleship::models::board"],[616,"battleship::models::board_status"],[640,"battleship::models::coordinates"],[664,"battleship::models::orientation"],[683,"battleship::models::position"],[712,"battleship::models::ship"],[741,"battleship::models::ship_intel"],[764,"battleship::models::ship_status"],[785,"battleship::models::ship_types"],[811,"battleship::models::strike"],[836,"battleship::models::strike_report"],[861,"battleship::models::traits"],[878,"battleship::models::traits::add_default_headers"],[880,"battleship::models::traits::is_app_hook"],[882,"battleship::models::traits::query_params"],[885,"battleship::models::traits::response_builder"],[887,"battleship::models::traits::segment"],[901,"battleship::models::traits::segment::iterator"],[915,"core::result"],[916,"tide::request"],[917,"core::future::future"],[918,"alloc::boxed"],[919,"core::pin"],[920,"core::clone"],[921,"core::marker"],[922,"core::marker"],[923,"std::sync::rwlock"],[924,"alloc::sync"],[925,"core::any"],[926,"uuid"],[927,"serde::de"],[928,"erased_serde::ser"],[929,"erased_serde::ser"],[930,"erased_serde::error"],[931,"core::fmt"],[932,"core::fmt"],[933,"serde::ser"],[934,"tide::response"],[935,"tide"],[936,"alloc::string"],[937,"core::option"],[938,"tide::server"],[939,"clap_builder::builder::command"],[940,"clap_builder::parser::matches::arg_matches"],[941,"clap_builder"],[942,"clap_builder::util::id"],[943,"time::format_description::borrowed_format_item"],[944,"time::formatting::formattable"],[945,"time::parsing::parsable"],[946,"time::offset_date_time"],[947,"core::fmt"],[948,"core::convert"],[949,"http_types::status_code"],[950,"ndarray::slice"],[951,"ndarray::aliases"],[952,"ndarray::slice"]],"d":["Documentation only files.","<code>tokio</code> application, including the main <code>tide</code> routine to host …","<code>clap</code> based CLI parameters parser, accepting command line …","Configuration module, containing constants, statics and …","Module containing the main error type <code>AppError</code>","Logging module, with public functions to print different …","The main handler for the whole app. Parses the CLI …","A collection of structs and traits to facilitate the game.","A <code>host.json</code> file is required at the current working …","An <code>AppHook</code> that wraps a <code>tide::Endpoint</code>, allowing something …","Records the current state of the app, to be passed during …","A <code>PageVisit</code> struct capturing information about a single …","A wrapper for <code>tide::Endpoint</code> which in itself is a …","Stores the state of the app.","The main function which starts the app using the given …","","","","","Hooks to be added to the tide App.","","A struct to log each visit to an endpoint of this app.","","","Starts the host app.","","","","Tasks creating Async futures","","","","An <code>AppHook</code> that wraps a <code>tide::Endpoint</code>, allowing something …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Wraps an <code>IsAppHook</code>+<code>tide::Endpoint</code> to create a","","","","","Records the current state of the app, to be passed during …","Add a new <code>Board</code> and insert it into the this app.","","","","Configure this <code>AppState</code> with the provided …","Create a default <code>AppState</code> using the current UTC time.","","","Drop a board by <code>Uuid</code>.","The <code>time::Duration</code> that had elapsed since the start of the …","","","Returns the argument unchanged.","Get a board by <code>Uuid</code>.","Get a <code>BoardStatus</code> by <code>Uuid</code>.","Get all the <code>StrikeReport</code>s that occured on the specified …","Calls <code>U::from(self)</code>.","List all the games.","Log visit.","Create a default <code>AppState</code> using the current UTC time.","Create a new <code>Board</code> and insert it into this app.","","","","","","Get a new <code>Arc</code> reference to the internal termination token.","","","","","Starts the host app.","<code>Endpoint</code> for creating a new board.","<code>Endpoint</code> for creating a new board.","<code>Endpoint</code> for creating a new board.","<code>Endpoint</code> for creating a new board.","<code>Endpoint</code> for listing all the <code>Strike</code>s that occurred on a …","<code>Endpoint</code> for creating a new board.","Special Hook which is a <code>Endpoint</code>, but only for the …","<code>Endpoint</code> for creating a new board.","","","","","","List all the strikes that occurred on a board.","","","","","","","","","","Roll the dice to see if we should simulate a failure.","Special module only enabled if feature <code>simulate_failures</code> …","","","<code>Endpoint</code> for creating a new board.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>AppStatusHook</code> from a <code>AppState</code>.","","","","","<code>Endpoint</code> for creating a new board.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>BoardStatusHook</code> from a <code>AppState</code>.","","","","","<code>Endpoint</code> for creating a new board.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>DropBoardHook</code> from a <code>AppState</code>.","","","","","<code>Endpoint</code> for creating a new board.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>ListBoardsHook</code> from a <code>AppState</code>.","","","","","<code>Endpoint</code> for listing all the <code>Strike</code>s that occurred on a …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>ListStrikesHook</code> from a <code>AppState</code>.","","","","","<code>Endpoint</code> for creating a new board.","Parameters for the above <code>Endpoint</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new <code>NewBoardHook</code> from a <code>AppState</code> behind a <code>RwLock</code>.","","","","","","","","","","","","","","Special Hook which is a <code>Endpoint</code>, but only for the …","","","","Simulate a 502 Bad Gateway.","Simulate a 408 Request Timeout.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Instantiate a new <code>SimulatedFailureHook</code>. This is not …","Roll the dice to see if we should simulate a failure.","","","","","<code>Endpoint</code> for creating a new board.","Parameters for the above <code>Endpoint</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new <code>StrikeHook</code> from a <code>AppState</code>.","","","","","","","","","","","","","","Possible queries for the <code>TerminationHook</code> <code>Endpoint</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new <code>TerminationHook</code> from a <code>AppState</code> behind an …","","","","","","","","","","A <code>PageVisit</code> struct capturing information about a single …","","","","","","","","","","","","Returns the argument unchanged.","Create a <code>PageVisit</code> instance from a pair of <code>tide::Request</code> …","Calls <code>U::from(self)</code>.","Create a <code>PageVisit</code> instance from raw components.","","","","","","","","","","","","","Create the app an populate it with the routes we need.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new <code>TerminationToken</code> for termination signaling …","Notify this <code>TerminationToken</code> to end.","","","Replace the current result embedded in this …","The coroutine to listen for any termination notifications.","","","","","Simple program to greet a person","Binds the host to a custom hosting address.","","","","","","","Sets a custom JSON config file. Defaults to <code>./host.json</code>.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Binds the host to this custom port.","Sets the factor of which a request can fail. For instance, …","","","","","","","The default datetime format for use in this app.","","","","","","","A struct to parse the configurations from <code>host.json</code>, or …","Maximum number of retries for each ship before we give up.","","","Binds the host to a hosting address.","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Binds the host to this port.","Serialize and Deserialize module for <code>DATETIME_FORMAT</code>.","Sets the factor of which a request can fail. For instance, …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A struct to parse the configurations from <code>host.json</code>, or …","Binds the host to a hosting address.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Binds the host to this port.","","","Sets the factor of which a request can fail. For instance, …","","","","","","","","","","A collection of all possible errors raised by the app.","<code>host.json</code> contains invalid JSON.","<code>host.json</code> was not found at the specified location.","A requested position is out of the bounds of the board. …","The OS prevented the host from listening to <code>Ctrl-C</code> …","The feature requested is only enabled in debug mode.","The host is attempting to create a board with an existing …","The target board cannot be modified, as the game has …","The provided baord ID is not a well formatted <code>Uuid</code>.","A query parameter provided is invalid.","A return value had been computed, but the object failed to …","A lock for an object is poisoned; execution cannot …","The provided <code>Uuid</code> does not match any existing boards.","A mandatory query parameter is missing.","A requested position is not available.","A termination request had been sent with an error message. …","The server failed to start. This is typically caused by …","A strike report had been requested on an empty position …","<code>tide</code> encountered an error. The error message from <code>tide</code> …","An unknown error had occurred. Refer to the context for …","","","Get the HTTP Status code for this error.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Get the name of this error.","","","","","","","","","","","","","","","","","","","","","","","","","","","An enum for different log levels that appears differently.","","","Return the ANSI 8-bit colour code for this level.","","","Write a log line to <code>stderr</code> at the  Critical level.","Write a log line to <code>stderr</code> at the  Debug level.","Write a log line to <code>stderr</code> at the  Error level.","","Format a string for the requested level.","Returns the argument unchanged.","Write a log line to <code>stderr</code> at the  Info level.","Calls <code>U::from(self)</code>.","Log a string to <code>stderr</code> for the requested level.","Return the name for this level.","Return the suffix for this level.","Write a log line to <code>stderr</code> at the  Trace level.","","","","","Write a log line to <code>stderr</code> at the  Warning level.","Wraps the string in the corresponding colour.","","","","A brief summary of the status of the board.","","","","","Denotes the position of on a board.","","","","","","","Orientation of the ship.","Indicates the state of a position on the grid.","","","","An abridged status of a <code>Ship</code> for the purpose of returning …","Orientation of the ship.","All possible ship types.","","Recording a <code>Strike</code>.","A report for a strike, formatted for export.","","","","","","Serializable status of a <code>Board</code>, used for describing the …","","","","","","","","","","Defines orientation on the board.","","","","","","","","Defines orientation on the board.","","","Possible types of ships.","","","","","","","","","","","","Traits","","","","","","","","","","Takes ownership of a ship, and attempt to add it to the …","Takes ownership of a <code>Strike</code>, then perform the strike onto …","","","","","The <code>time::Duration</code> that had elapsed since the start of the …","","Return an <code>Err</code> if frozen.","","Freeze this <code>Board</code>.","Returns the argument unchanged.","","Check if the player has won.","The height of this board.","Calls <code>U::from(self)</code>.","Check the availability of the positions specified.","Return if this <code>Board</code> is frozen.","Create a new <code>Board</code> instance.","","","Set state of some coordinates on the board to a specific …","Set a slice of the board to a specific state.","Returns a report of all the ships statuses without giving …","","Return the number of ships remaining.","","","Return a public <code>BoardStatus</code> for this board.","Count the number of <code>Strike</code>s on this <code>Board</code>.","Returns a report of all the strikes that had been made.","","","","","Get the identifier of a <code>Strike</code>.","","","The width of this board.","A brief summary of the status of the board.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Denotes the position of on a board.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new <code>Coordinates</code>.","","Create a new <code>Coordinates</code> by shifting.","Create a new <code>Coordinates</code> by shifting downwards.","Create a new <code>Coordinates</code> by shifting rightwards.","","","","","","","","","Orientation of the ship.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Indicates the state of a position on the grid.","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Randomly generate a ship.","","","","Count the number of strikes this <code>Ship</code> had sustained.","","","Check if the two ships are the same.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Return the length of the ship.","Return the orientation of the ship.","","","","Return the current status of the ship.","Attempts to strike the ship.","","","","","Get the identifier of a <code>Strike</code>.","","","Return the x position of the ship.","Return the y position of the ship.","An abridged status of a <code>Ship</code> for the purpose of returning …","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Orientation of the ship.","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","All possible ship types.","","","","","","Wraps the &amp;<code>str</code> with the designated colour.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Get the label of this ship type.","Get the length of this ship type.","","","","","","","Recording a <code>Strike</code>.","","","","","Return the coordinates of the strike.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Instantiate a new <code>Strike</code> object.","","","","","","Get the identifier of a <code>Strike</code>.","","","Return the x position of the strike.","Return the y position of the strike.","A report for a strike, formatted for export.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Create a new <code>StrikeReport</code> from raw data.","","","","","Try create a <code>StrikeReport</code> from a <code>Coordinates</code>.","","","","","Add a value to <code>ships_remaining</code>.","","Marker trait for <code>tide::Endpoint</code>s that require access to an …","A trait for anything that can be used as a URL query.","","A trait for structs that is linear on the board - has a …","Trait to be implemnted by <code>tide::ResponseBuilder</code> to add …","Add default headers to a <code>tide::ResponseBuilder</code> to be …","Build a <code>tide::Response</code> from this instance.","Trait: <code>IsAppHook</code>","Return the length of the segment.","Create a new instance from a <code>AppState</code> behind a <code>RwLock</code>.","Return the orientation of the segment.","","","","Return the x position of the segment.","Return the y position of the segment.","","Add default headers to a <code>tide::ResponseBuilder</code> to be …","Marker trait for <code>tide::Endpoint</code>s that require access to an …","Create a new instance from a <code>AppState</code> behind a <code>RwLock</code>.","A trait for anything that can be used as a URL query.","Try parse a <code>tide::Request</code> instance.","Try parse a <code>tide::Request</code> instance.","","Build a <code>tide::Response</code> from this instance.","A trait for structs that is linear on the board - has a …","Returns the starting coordinates in an array.","Returns the starting coordinates in an array.","Returns the <code>n</code>-th <code>Coordinates</code> of this <code>Segment</code>.","Returns the <code>n</code>-th <code>Coordinates</code> of this <code>Segment</code>.","Iterate through the <code>Coordinates</code> in this <code>Segment</code>.","Iterate through the <code>Coordinates</code> in this <code>Segment</code>.","","Return the length of the segment.","Return the orientation of the segment.","Returns the <code>SliceInfo</code> representing this <code>Segment</code>.","Returns the <code>SliceInfo</code> representing this <code>Segment</code>.","Return the x position of the segment.","Return the y position of the segment.","A special iterator class for iterating <code>Coordinates</code> through …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>IterSegment</code> from something that implements …","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,31,5,31,0,5,0,14,31,0,14,14,31,0,14,31,31,0,5,5,5,5,5,5,5,5,5,5,5,5,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,39,40,41,42,43,47,49,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,38,38,0,39,39,39,39,39,39,39,39,39,39,39,0,40,40,40,40,40,40,40,40,40,40,40,0,41,41,41,41,41,41,41,41,41,41,41,0,42,42,42,42,42,42,42,42,42,42,42,0,0,43,44,43,44,43,44,44,44,44,44,44,44,43,44,44,43,44,43,43,44,44,44,43,44,43,44,43,44,43,44,44,0,0,45,45,45,45,45,45,45,45,45,0,45,45,45,45,0,0,47,48,47,48,47,48,48,48,48,48,48,48,47,48,47,48,47,47,48,48,47,48,47,48,47,48,47,48,48,48,0,0,49,50,49,50,49,50,50,50,50,50,49,50,49,50,49,49,50,49,50,49,50,49,50,49,50,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,0,0,0,0,0,60,0,4,60,60,60,60,0,60,4,0,4,60,60,60,60,0,0,66,67,66,67,0,0,66,67,66,67,66,67,66,67,0,0,66,67,66,67,66,67,67,67,66,66,67,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,91,92,93,94,91,95,96,93,94,97,98,99,100,101,102,101,102,74,74,74,74,0,74,74,74,74,74,0,0,0,0,74,74,0,74,74,74,74,0,74,74,74,74,0,74,87,87,0,0,0,0,0,0,0,87,86,79,80,87,80,0,0,79,0,80,0,0,0,80,0,0,87,86,86,28,0,0,0,76,77,29,84,28,19,29,29,0,76,0,19,84,0,0,28,0,76,84,0,19,29,19,28,19,84,0,0,19,28,76,0,19,28,76,84,77,29,78,78,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,79,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,0,0,0,80,80,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,86,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,87,87,87,87,0,87,87,87,87,87,87,87,87,87,0,87,87,87,87,87,87,87,87,87,87,87,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,0,0,103,104,0,90,17,90,0,0,0,90,90,0,103,0,17,0,105,105,0,104,0,90,90,90,90,90,90,0,90,90,90,90,90,90,0,88,88,88,88,88,88,88,88,88,88,88,88,88],"f":[0,0,0,0,0,0,[[],[[3,[1,2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[4,[[3,[1,2]]]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[-2]],[6,[-1]]],[[9,[[8,[7]]]]],[10,11,12],[[13,[-1]]]],0,[-1,-1,[]],[-1,-2,[],[]],0,[[[16,[[15,[14]]]]],[[5,[-1]]],17],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[[14,19],[[3,[20,2]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[14,4],14],[[],14],[-1,[[3,[14]]],21],[[-1,22],[[3,[1,23]]],[]],[[14,20],[[3,[19,2]]]],[14,24],[[-1,22],[[3,[1,25]]],[]],[[14,26],27],[-1,-1,[]],[[14,20],[[3,[[15,[19]],2]]]],[[14,20],[[3,[28,2]]]],[[14,20],[[3,[[30,[29]],2]]]],[-1,-2,[],[]],[14,[[3,[[30,[28]],2]]]],[[14,31],1],[[],14],[[14,[33,[32]],34],[[3,[28,2]]]],0,[[14,-1],3,35],0,0,0,[14,[[16,[36]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],[4,[[3,[1,2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[32,37],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[38,[6,[-1]]],[[9,[[8,[7]]]]],[10,11,12]],[-1,-1,[]],[-1,-2,[],[]],0,[[[16,[[15,[14]]]]],38],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[39,[6,[-1]]],[[9,[[8,[7]]]]],[10,11,12]],[-1,-1,[]],[-1,-2,[],[]],0,[[[16,[[15,[14]]]]],39],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[40,[6,[-1]]],[[9,[[8,[7]]]]],[10,11,12]],[-1,-1,[]],[-1,-2,[],[]],0,[[[16,[[15,[14]]]]],40],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[41,[6,[-1]]],[[9,[[8,[7]]]]],[10,11,12]],[-1,-1,[]],[-1,-2,[],[]],0,[[[16,[[15,[14]]]]],41],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[42,[6,[-1]]],[[9,[[8,[7]]]]],[10,11,12]],[-1,-1,[]],[-1,-2,[],[]],0,[[[16,[[15,[14]]]]],42],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[43,[6,[-1]]],[[9,[[8,[7]]]]],[10,11,12]],[44,44],[[-1,-2],1,[],[]],[-1,[[3,[44]]],21],[[-1,22],[[3,[1,23]]],[]],[[44,44],37],[[-1,22],[[3,[1,25]]],[]],[[44,26],27],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[[16,[[15,[14]]]]],43],[[44,-1],3,35],0,[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[45,[6,[-1]]],[[9,[[8,[7]]]]],[10,11,12]],[45,46],[45,46],[[],45],[-1,-1,[]],[-1,-2,[],[]],[[],45],[32,37],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[47,[6,[-1]]],[[9,[[8,[7]]]]],[10,11,12]],[48,48],[[-1,-2],1,[],[]],[-1,[[3,[48]]],21],[[-1,22],[[3,[1,23]]],[]],[[48,48],37],[[-1,22],[[3,[1,25]]],[]],[[48,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[16,[[15,[14]]]]],47],[[48,-1],3,35],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[49,[6,[-1]]],[[9,[[8,[7]]]]],[10,11,12]],[50,50],[[-1,-2],1,[],[]],[-1,[[3,[50]]],21],0,[[50,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[16,[[15,[14]]]]],49],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[31,31],[[-1,-2],1,[],[]],[-1,[[3,[31]]],21],[[-1,22],[[3,[1,23]]],[]],[[31,31],37],[[-1,22],[[3,[1,25]]],[]],0,[[31,26],27],[-1,-1,[]],[[[6,[-1]],51],31,[10,11,12]],[-1,-2,[],[]],[[[53,[52]],52,52,51],31],0,[[31,-1],3,35],0,0,[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],0,[-1,-2,[],[]],0,0,[14,[[54,[1]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],36],[[36,26],27],[-1,-1,[]],[-1,-2,[],[]],[[],36],[[36,[3,[1,2]]],1],0,0,[[36,[3,[1,2]]],[[53,[[3,[1,2]]]]]],[[[16,[36]]],[[3,[1,2]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,[55,55],[55,55],[-1,-2,[],[]],[-1,-2,[],[]],[[],55],[[],55],0,[[56,26],27],[-1,-1,[]],[57,[[3,[56,58]]]],[57,[[3,[56,58]]]],[[],[[53,[59]]]],[-1,-2,[],[]],0,0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[[56,57],[[3,[1,58]]]],[[56,57],[[3,[1,58]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[60,[[62,[61]]]],[-1,-1,[]],0,[-1,-2,[],[]],0,0,0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[0,[63,64]]]],[-1,[[3,[65]]],21],[[66,26],27],[[67,26],27],[[-1,26],[[3,[1,68]]],[]],[[-1,26],[[3,[1,68]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[65,-1],3,35],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[67,[[3,[[53,[65]],-1]]],69],[[67,-1],[[3,[[53,[65]]]]],21],[[66,70],[[3,[65,-1]]],69],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[[53,[65]]]]],21],[[[53,[65]],-1],3,35],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[4,4],[[-1,-2],1,[],[]],[[],4],[-1,[[3,[4]]],21],[[-1,22],[[3,[1,23]]],[]],[[-1,22],[[3,[1,25]]],[]],[[4,26],27],[-1,-1,[]],[-1,-2,[],[]],0,[[4,56],4],[[4,-1],3,35],0,[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[56,[[3,[4,2]]]],[-1,[[3,[4,2]]],[[72,[71]]]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],[-1,[[3,[65]]],21],[[65,-1],3,35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[2,73],0,[[2,26],27],[[2,26],27],[-1,-1,[]],[-1,-2,[],[]],[2,52],[-1,52,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[74,75],[-1,-2,[],[]],[-1,-2,[],[]],[70,1],[70,1],[70,1],0,[[74,70],52],[-1,-1,[]],[70,1],[-1,-2,[],[]],[[74,70],1],[74,70],[74,70],[70,1],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],[70,1],[[74,37,70],52],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[19,76],[[3,[1,2]]]],[[19,77],[[3,[29,2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[19]]],21],[[-1,22],[[3,[1,23]]],[]],[19,24],[[-1,22],[[3,[1,25]]],[]],[19,[[3,[1,2]]]],[[19,26],27],[19,1],[-1,-1,[]],0,[19,[[3,[37,2]]]],[19,32],[-1,-2,[],[]],[[19,78,79,32],37],[19,37],[[[33,[32]],34],19],0,[[19,-1],3,35],[[19,78,79,32,80],1],[[19,[83,[[33,[81]],82,82]],80],1],[19,[[3,[[30,[84]],2]]]],0,[19,[[3,[32,2]]]],0,0,[19,[[3,[28,2]]]],[19,32],[19,[[30,[29]]]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[19,20],0,[-1,-2,[],[]],[19,32],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[28,28],[[-1,-2],1,[],[]],[-1,[[3,[28]]],21],[[-1,22],[[3,[1,23]]],[]],0,[[-1,22],[[3,[1,25]]],[]],[[28,26],27],[-1,-1,[]],[-1,-2,[],[]],[[28,-1],3,35],0,0,0,[-1,-2,[],[]],[19,[[3,[28]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],0,[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[78,78],[[-1,-2],1,[],[]],[-1,[[3,[78]]],21],[[-1,22],[[3,[1,23]]],[]],[[78,78],37],[[-1,22],[[3,[1,25]]],[]],[[78,26],27],[-1,-1,[]],[-1,-2,[],[]],[[32,32],78],[[78,-1],3,35],[[78,79,85],78],[[78,85],78],[[78,85],78],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[79,79],[[-1,-2],1,[],[]],[-1,[[3,[79]]],21],[[-1,22],[[3,[1,23]]],[]],[[-1,22],[[3,[1,25]]],[]],[[79,26],27],[-1,-1,[]],[-1,-2,[],[]],[[79,-1],3,35],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[80,80],[[-1,-2],1,[],[]],[[],80],[-1,[[3,[80]]],21],[[-1,22],[[3,[1,23]]],[]],[[80,80],37],[[-1,22],[[3,[1,25]]],[]],[[80,26],27],[[80,26],27],[-1,-1,[]],[-1,-2,[],[]],[[80,-1],3,35],[-1,-2,[],[]],[-1,52,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[19,37],[-1,-2,[],[]],[-1,-2,[],[]],0,[76,[[3,[32,2]]]],[-1,[[3,[76]]],21],[[-1,22],[[3,[1,23]]],[]],[[76,76],37],[[-1,22],[[3,[1,25]]],[]],[[76,26],27],[-1,-1,[]],[-1,-2,[],[]],[76,32],[76,79],0,[[76,-1],3,35],0,[76,[[3,[86,2]]]],[[76,[16,[77]]],[[3,[37,2]]]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[76,20],0,[-1,-2,[],[]],[76,32],[76,32],0,[-1,-2,[],[]],[-1,-2,[],[]],[84,84],[[-1,-2],1,[],[]],0,[-1,[[3,[84]]],21],[[-1,22],[[3,[1,23]]],[]],[[-1,22],[[3,[1,25]]],[]],[[84,26],27],[-1,-1,[]],[-1,-2,[],[]],0,[[84,-1],3,35],0,0,[-1,-2,[],[]],[76,[[3,[84]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],0,[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[86,86],[[-1,-2],1,[],[]],[-1,[[3,[86]]],21],[[-1,22],[[3,[1,23]]],[]],[[86,86],37],[[-1,22],[[3,[1,25]]],[]],[[86,26],27],[-1,-1,[]],[-1,-2,[],[]],[[86,-1],3,35],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[87,87],[[-1,-2],1,[],[]],[[87,70],52],[-1,[[3,[87]]],21],[[-1,22],[[3,[1,23]]],[]],[[-1,22],[[3,[1,25]]],[]],0,[[87,26],27],[-1,-1,[]],[-1,-2,[],[]],[87,70],[87,32],[[87,-1],3,35],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[77,77],[[-1,-2],1,[],[]],[77,[[33,[32]]]],0,[-1,[[3,[77]]],21],[[-1,22],[[3,[1,23]]],[]],[[77,77],37],[[-1,22],[[3,[1,25]]],[]],[[77,26],27],[-1,-1,[]],[-1,-2,[],[]],[78,77],[[77,-1],3,35],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[77,20],0,[-1,-2,[],[]],[77,32],[77,32],0,[-1,-2,[],[]],[-1,-2,[],[]],[29,29],[[-1,-2],1,[],[]],0,[-1,[[3,[29]]],21],[[-1,22],[[3,[1,23]]],[]],[[-1,22],[[3,[1,25]]],[]],[[29,26],27],[-1,-1,[]],0,0,[-1,-2,[],[]],[[20,78,37,[53,[84]],[53,[32]]],29],[[29,-1],3,35],0,[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[[80,37],[[3,[29,2]]]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],0,[-1,-2,[],[]],[[29,32],29],0,0,0,0,0,0,[-1,-1,[]],[-1,46,[]],0,[-1,32,[]],[[[16,[[15,[14]]]]],-1,[]],[-1,79,[]],0,0,0,[-1,32,[]],[-1,32,[]],0,[-1,-1,[]],0,[[[16,[[15,[14]]]]],-1,[]],0,[[[6,[-1]]],[[3,[-2,2]]],[],[]],[[[6,[-1]]],[[3,[-2,2]]],[],[]],0,[-1,46,[]],0,[-1,[[33,[32]]],[]],[-1,[[33,[32]]],[]],[[-1,32],[[53,[78]]],[]],[[-1,32],[[53,[78]]],[]],[-1,[[88,[-1]]],89],[-1,[[88,[-1]]],89],0,[-1,32,[]],[-1,79,[]],[-1,[[83,[[33,[81]],82,82]]],[]],[-1,[[83,[[33,[81]],82,82]]],[]],[-1,32,[]],[-1,32,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[88,[-1]]],90],[[[88,[-1]]],53,90],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[4,"AppError",424],[4,"Result",915],[3,"HostConfiguration",398],[3,"AppHook",32],[3,"Request",916],[8,"Future",917],[3,"Box",918],[3,"Pin",919],[8,"Clone",920],[8,"Send",921],[8,"Sync",921],[8,"Endpoint",922],[3,"AppState",45],[3,"RwLock",923],[3,"Arc",924],[8,"IsAppHook",880],[3,"TypeId",925],[3,"Board",576],[3,"Uuid",926],[8,"Deserializer",927],[8,"Serializer",928],[4,"ErrorImpl",928],[3,"Duration",929],[3,"Error",930],[3,"Formatter",931],[6,"Result",931],[3,"BoardStatus",616],[3,"StrikeReport",836],[3,"Vec",932],[3,"PageVisit",273],[15,"usize"],[15,"array"],[15,"u16"],[8,"Serializer",933],[3,"TerminationToken",302],[15,"bool"],[3,"AppStatusHook",105],[3,"BoardStatusHook",117],[3,"DropBoardHook",129],[3,"ListBoardsHook",141],[3,"ListStrikesHook",153],[3,"NewBoardHook",165],[3,"NewBoardParams",165],[3,"SimulatedFailureHook",198],[3,"Response",934],[3,"StrikeHook",214],[3,"StrikeParams",214],[3,"TerminationHook",246],[3,"TerminationQuery",246],[6,"Result",935],[3,"String",936],[4,"Option",937],[3,"Server",938],[3,"Command",939],[3,"CommandLineParameters",319],[3,"ArgMatches",940],[6,"Error",941],[3,"Id",942],[3,"DATETIME_FORMAT",342],[4,"BorrowedFormatItem",943],[15,"slice"],[8,"Formattable",944],[8,"Parsable",945],[3,"OffsetDateTime",946],[3,"Visitor",367],[3,"OptionVisitor",367],[3,"Error",931],[8,"Error",927],[15,"str"],[3,"Path",947],[8,"AsRef",948],[4,"StatusCode",949],[4,"LogLevel",475],[15,"u8"],[3,"Ship",712],[3,"Strike",811],[3,"Coordinates",640],[4,"Orientation",664],[4,"Position",683],[4,"SliceInfoElem",950],[6,"Ix2",951],[3,"SliceInfo",950],[3,"ShipIntel",741],[15,"i64"],[4,"ShipStatus",764],[4,"ShipType",785],[3,"IterSegment",901],[8,"Sized",921],[8,"Segment",887],[13,"ServerStartUpError",458],[13,"Unknown",458],[13,"ConfigNotReadable",458],[13,"ConfigNotParsable",458],[13,"CtrlCError",458],[13,"RemoteRequestedTermination",458],[13,"DuplicatedBoard",458],[13,"MissingBoard",458],[13,"FrozenBoard",458],[13,"InvalidBoard",458],[13,"PositionOccupied",458],[13,"CoordinatesOutOfBounds",458],[8,"AddDefaultHeaders",878],[8,"ResponseBuilder",885],[8,"QueryParams",882]],"b":[[448,"impl-Debug-for-AppError"],[449,"impl-Display-for-AppError"],[701,"impl-Debug-for-Position"],[702,"impl-Display-for-Position"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
