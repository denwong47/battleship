var searchIndex = JSON.parse('{\
"battleship":{"doc":"","t":"AAAAAFADDDAAAMMMMAMAMMFMMAMMMDLLLMLLMLLLLLDLMLLLLLLLLLLLLLMMMLLLLLFDDDDDDAAAMMMMMMAAADLLLLLMLLLLLDLLLLLMLLLLLDLLLLLMLLLLLDDLLLLLLLLLLLLLLLMLLMMLLLLLLLLLDDLLLLLLLLLLLLLLLMLLLLLLLLLLLMMDDLLLLLLLLMLLLLLMLLLLLLLLLLDLLMLLLLLMLLLLLMLMMLLLLMLAAFDLLLLLLLLMMLLLLLLDMLLLLLLMLLLLLLMLLLLLLDRRRRRDRMAMLLLLALMALLLLDDLLLLFFLLLLLLLLAFLLLLLLLLLLLFFDMLLLLLLLLLMLLLLLLLLLFFENNNNNNNNNNNNNNNNNNNLLLOLLLLLLLLLLLMMMMMMMMMMMMMMMMMNNNNENNLLLFFFOLLFLLLLFLLLLFLNNDDRRRRDNNNNNNEENDNDEENDDNNNMAAAMMMMMMMMAMAMAAMAMMAMMMMMAAMMMAMMMMMMMMDLLLLLLLLLLMLLLLLLMLLLLMMMLLMLLLLMLLDMLLLLLMLLLLLMMMLLLLLMLDLLLLLLLLLLLLLLLLLLLLLMMNENLLLLLLLLLLLLLLLRRRRNNENNLLLLLLLLLLLLLLLLLLLDLLLMLLLLLLLLLMLMLLMLLLLMLLLDLLLLMLLLLLLMMLLLLLMLNENNLLLLLLLLLLLLLLLLLNNNNENLLLLLLLOLLLLLLLLLLLDLLLLLMLLLLLLLLLLLLLMLLLDLLLLMLLLLMMLLLLLLLLMLIIIIKAKKKAAAKKIKILLIKILLLLLLAKKLLKKDLLMLLLLLMLLLL","n":["app","args","config","error","logger","main","models","AppHook","AppState","PageVisit","app_hook","app_state","base","boards","client","end_point","error","hooks","locked_state","page_visit","page_visits","path","run_app","start_time","status_code","tasks","termination_token","timestamp","url","AppHook","borrow","borrow_mut","call","end_point","from","into","locked_state","new","try_from","try_into","type_id","vzip","AppState","add_board","boards","borrow","borrow_mut","default","drop_board","elapsed","from","get_board","get_board_status","into","list_board_statuses","log_visit","new","new_board","page_visits","start_time","termination_token","token","try_from","try_into","type_id","vzip","run_app","BoardStatusHook","DropBoardHook","ListBoardsHook","NewBoardHook","StrikeHook","TerminationHook","board_status","drop_board","list_boards","locked_state","locked_state","locked_state","locked_state","locked_state","locked_state","new_board","strike","termination","BoardStatusHook","borrow","borrow_mut","call","from","into","locked_state","new","try_from","try_into","type_id","vzip","DropBoardHook","borrow","borrow_mut","call","from","into","locked_state","new","try_from","try_into","type_id","vzip","ListBoardsHook","borrow","borrow_mut","call","from","into","locked_state","new","try_from","try_into","type_id","vzip","NewBoardHook","NewBoardParams","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","deserialize","eq","erased_serialize","fmt","from","from","into","into","locked_state","new","serialize","ship_count","size","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StrikeHook","StrikeParams","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","deserialize","eq","erased_serialize","fmt","from","from","into","into","locked_state","new","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","x","y","TerminationHook","TerminationQuery","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","deserialize","error","fmt","from","from","into","into","locked_state","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","PageVisit","borrow","borrow_mut","client","clone","clone_into","deserialize","eq","erased_serialize","error","fmt","from","from_request_and_response","into","new","path","serialize","status_code","timestamp","to_owned","try_from","try_into","type_id","url","vzip","app_server","termination","create_app","TerminationToken","borrow","borrow_mut","default","fmt","from","into","new","notify","notify","result","submit_result","task","try_from","try_into","type_id","vzip","CommandLineParameters","addr","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","config","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","port","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","DATETIME_FORMAT","DEFAULT_ADDR","DEFAULT_BOARD_SIZE","DEFAULT_CONFIG_PATH","DEFAULT_PORT","DEFAULT_SHIP_COUNT","HostConfiguration","SHIP_GENERATION_MAX_RETRY","__private_field","_serde_offset_date_time","addr","borrow","borrow_mut","deref","from","host_config","into","port","serde_offset_date_time","try_from","try_into","type_id","vzip","OptionVisitor","Visitor","borrow","borrow","borrow_mut","borrow_mut","description","deserialize","expecting","expecting","fmt","fmt","from","from","into","into","option","serialize","try_from","try_from","try_into","try_into","type_id","type_id","visit_none","visit_some","visit_str","vzip","vzip","deserialize","serialize","HostConfiguration","addr","borrow","borrow_mut","clone","clone_into","deserialize","erased_serialize","fmt","from","into","port","resolve_with_args","serialize","to_owned","try_from","try_from_args","try_from_file","try_into","type_id","vzip","deserialize","serialize","AppError","ConfigNotParsable","ConfigNotReadable","CoordinatesOutOfBounds","CtrlCError","DebugOnlyFeature","DuplicatedBoard","FrozenBoard","InvalidBoard","InvalidParameters","JSONSerializationError","LockPoisoned","MissingBoard","MissingParameters","PositionOccupied","RemoteRequestedTermination","ServerStartUpError","StrikeReportRequestedOnEmpty","TideError","Unknown","borrow","borrow_mut","error_code","expand_variants","fmt","fmt","from","into","name","provide","to_string","try_from","try_into","type_id","vzip","addr","context","err","err","err","message","message","path","path","uuid","uuid","uuid","uuid_str","x","x","y","y","Critical","Debug","Error","Info","LogLevel","Trace","Warning","ansi_code","borrow","borrow_mut","critical","debug","error","expand_variants","format","from","info","into","log","name","suffix","trace","try_from","try_into","type_id","vzip","warning","wraps","AircraftCarrier","Battleship","Board","BoardStatus","CHAR_EMPTY","CHAR_MISSED","CHAR_SHIP_HIT","CHAR_SHIP_UNHIT","Coordinates","Cruiser","Discovered","Down","Empty","Frigate","Missed","Orientation","Position","Right","Ship","ShipHit","ShipIntel","ShipStatus","ShipType","ShipUnhit","Strike","StrikeReport","Submarine","Sunk","Undiscovered","active","board","board_status","coordinates","coordinates","coordinates","coordinates","damages","elapsed","frozen","hit","intel","orientation","orientation","position","position_index","ship","ship_intel","ship_intel","ship_status","ship_type","ship_type","ship_types","ships","size","size","start_time","status","strike","strike_report","strikes","strikes","strikes","traits","uuid","uuid","uuid","uuid","uuid","uuid","x","y","Board","add_ship","add_strike","borrow","borrow_mut","deserialize","elapsed","erased_serialize","err_if_frozen","freeze","from","frozen","has_won","height","into","is_available","is_frozen","new","position_index","serialize","set_segment_state","set_slice_state","ship_intel","ships","size","start_time","status","strike_count","strikes","try_from","try_into","type_id","uuid","uuid","vzip","width","BoardStatus","active","borrow","borrow_mut","clone","clone_into","deserialize","elapsed","erased_serialize","fmt","from","into","serialize","ship_intel","size","strikes","to_owned","try_from","try_from","try_into","type_id","uuid","vzip","Coordinates","borrow","borrow_mut","clone","clone_into","deserialize","eq","equivalent","erased_serialize","fmt","from","into","new","serialize","shift","shift_down","shift_right","to_owned","try_from","try_into","type_id","vzip","x","y","Down","Orientation","Right","borrow","borrow_mut","clone","clone_into","deserialize","erased_serialize","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","CHAR_EMPTY","CHAR_MISSED","CHAR_SHIP_HIT","CHAR_SHIP_UNHIT","Empty","Missed","Position","ShipHit","ShipUnhit","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","erased_serialize","fmt","fmt","from","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","Ship","add_to_board","borrow","borrow_mut","coordinates","damages","deserialize","eq","erased_serialize","fmt","from","into","length","orientation","orientation","serialize","ship_type","status","strike","strikes","try_from","try_into","type_id","uuid","uuid","vzip","x","y","ShipIntel","borrow","borrow_mut","clone","clone_into","damages","deserialize","erased_serialize","fmt","from","into","serialize","ship_type","status","to_owned","try_from","try_from","try_into","type_id","uuid","vzip","Discovered","ShipStatus","Sunk","Undiscovered","borrow","borrow_mut","clone","clone_into","deserialize","eq","equivalent","erased_serialize","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","AircraftCarrier","Battleship","Cruiser","Frigate","ShipType","Submarine","borrow","borrow_mut","clone","clone_into","colour_wraps","deserialize","erased_serialize","expand_types","fmt","from","into","label","length","serialize","to_owned","try_from","try_into","type_id","vzip","Strike","borrow","borrow_mut","clone","clone_into","coordinates","coordinates","deserialize","eq","erased_serialize","fmt","from","into","new","serialize","to_owned","try_from","try_into","type_id","uuid","uuid","vzip","x","y","StrikeReport","borrow","borrow_mut","clone","clone_into","coordinates","deserialize","erased_serialize","fmt","from","hit","intel","into","new","serialize","to_owned","try_from","try_from_position","try_into","type_id","uuid","vzip","IsAppHook","QueryParams","ResponseBuilder","Segment","build_response","is_app_hook","length","new","orientation","query_params","response_builder","segment","x","y","IsAppHook","new","QueryParams","parse_req","parse_req","ResponseBuilder","build_response","Segment","coordinates","coordinates","get","get","iter","iter","iterator","length","orientation","slice","slice","x","y","IterSegment","borrow","borrow_mut","count","from","into","into_iter","new","next","segment","try_from","try_into","type_id","vzip"],"q":[[0,"battleship"],[7,"battleship::app"],[29,"battleship::app::app_hook"],[42,"battleship::app::app_state"],[66,"battleship::app::base"],[67,"battleship::app::hooks"],[85,"battleship::app::hooks::board_status"],[97,"battleship::app::hooks::drop_board"],[109,"battleship::app::hooks::list_boards"],[121,"battleship::app::hooks::new_board"],[152,"battleship::app::hooks::strike"],[183,"battleship::app::hooks::termination"],[210,"battleship::app::page_visit"],[235,"battleship::app::tasks"],[237,"battleship::app::tasks::app_server"],[238,"battleship::app::tasks::termination"],[255,"battleship::args"],[277,"battleship::config"],[300,"battleship::config::_serde_offset_date_time"],[329,"battleship::config::_serde_offset_date_time::option"],[331,"battleship::config::host_config"],[352,"battleship::config::serde_offset_date_time"],[354,"battleship::error"],[389,"battleship::error::AppError"],[406,"battleship::logger"],[434,"battleship::models"],[505,"battleship::models::board"],[541,"battleship::models::board_status"],[564,"battleship::models::coordinates"],[588,"battleship::models::orientation"],[606,"battleship::models::position"],[634,"battleship::models::ship"],[662,"battleship::models::ship_intel"],[683,"battleship::models::ship_status"],[704,"battleship::models::ship_types"],[729,"battleship::models::strike"],[753,"battleship::models::strike_report"],[775,"battleship::models::traits"],[789,"battleship::models::traits::is_app_hook"],[791,"battleship::models::traits::query_params"],[794,"battleship::models::traits::response_builder"],[796,"battleship::models::traits::segment"],[810,"battleship::models::traits::segment::iterator"]],"d":["","","","","","","A collection of structs.","An <code>AppHook</code> that wraps a <code>tide::Endpoint</code>, allowing something …","","","","Stores the state of the app.","","","","","","Hooks to be added to the tide App.","","","","","Starts the host app.","","","Tasks creating Async futures","","","","An <code>AppHook</code> that wraps a <code>tide::Endpoint</code>, allowing something …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Wraps an <code>IsAppHook</code>+<code>tide::Endpoint</code> to create a","","","","","","Add a new <code>Board</code> and insert it into the this app.","","","","Create a default <code>AppState</code> using the current UTC time.","Drop a board by <code>Uuid</code>.","The <code>time::Duration</code> that had elapsed since the start of the …","Returns the argument unchanged.","Get a board by <code>Uuid</code>.","Get a <code>BoardStatus</code> by <code>Uuid</code>.","Calls <code>U::from(self)</code>.","List all the games.","Log visit.","Create a default <code>AppState</code> using the current UTC time.","Create a new <code>Board</code> and insert it into this app.","","","","Get a new <code>Arc</code> reference to the internal termination token.","","","","","Starts the host app.","<code>Endpoint</code> for creating a new board.","<code>Endpoint</code> for creating a new board.","<code>Endpoint</code> for creating a new board.","<code>Endpoint</code> for creating a new board.","<code>Endpoint</code> for creating a new board.","","","","","","","","","","","","","","<code>Endpoint</code> for creating a new board.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>BoardStatusHook</code> from a <code>AppState</code>.","","","","","<code>Endpoint</code> for creating a new board.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>DropBoardHook</code> from a <code>AppState</code>.","","","","","<code>Endpoint</code> for creating a new board.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>ListBoardsHook</code> from a <code>AppState</code>.","","","","","<code>Endpoint</code> for creating a new board.","Parameters for the above <code>Endpoint</code>.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new <code>NewBoardHook</code> from a <code>AppState</code> behind a <code>RwLock</code>.","","","","","","","","","","","","","<code>Endpoint</code> for creating a new board.","Parameters for the above <code>Endpoint</code>.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new <code>StrikeHook</code> from a <code>AppState</code>.","","","","","","","","","","","","","","Possible queries for the <code>TerminationHook</code> <code>Endpoint</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new <code>TerminationHook</code> from a <code>AppState</code> behind an …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Create a <code>PageVisit</code> instance from a pair of <code>tide::Request</code> …","Calls <code>U::from(self)</code>.","Create a <code>PageVisit</code> instance from raw components.","","","","","","","","","","","","","Create the app an populate it with the routes we need.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new <code>TerminationToken</code> for termination signaling …","Notify this <code>TerminationToken</code> to end.","","","Replace the current result embedded in this …","The coroutine to listen for any termination notifications.","","","","","Simple program to greet a person","Binds the host to a custom hosting address.","","","","","","","Sets a custom JSON config file. Defaults to <code>./host.json</code>.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Binds the host to this custom port.","","","","","","","The default datetime format for use in this app.","","","","","","","Maximum number of retries for each ship before we give up.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Serialize and Deserialize module for <code>DATETIME_FORMAT</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A collection of all possible errors raised by the app.","","","","","","","","","","","","","","","","","","","","","","Get the HTTP Status code for this error.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Get the name of this error.","","","","","","","","","","","","","","","","","","","","","","","","","","","","An enum for different log levels that appears differently.","","","Return the ANSI 8-bit colour code for this level.","","","Write a log line to <code>stderr</code> at the  Critical level.","Write a log line to <code>stderr</code> at the  Debug level.","Write a log line to <code>stderr</code> at the  Error level.","","Format a string for the requested level.","Returns the argument unchanged.","Write a log line to <code>stderr</code> at the  Info level.","Calls <code>U::from(self)</code>.","Log a string to <code>stderr</code> for the requested level.","Return the name for this level.","Return the suffix for this level.","Write a log line to <code>stderr</code> at the  Trace level.","","","","","Write a log line to <code>stderr</code> at the  Warning level.","Wraps the string in the corresponding colour.","","","","A brief summary of the status of the board.","","","","","Denotes the position of on a board.","","","","","","","Orientation of the ship.","Indicates the state of a position on the grid.","","","","An abridged status of a <code>Ship</code> for the purpose of returning …","Orientation of the ship.","All possible ship types.","","Recording a <code>Strike</code>.","A report for a strike, formatted for export.","","","","","","","","","","","","","","","","Defines orientation on the board.","","","","","","","Defines orientation on the board.","","","Possible types of ships.","","","","","","","","","","","","","","","","","","","","","Takes ownership of a ship, and attempt to add it to the …","Takes ownership of a <code>Strike</code>, then perform the strike onto …","","","","The <code>time::Duration</code> that had elapsed since the start of the …","","Return an <code>Err</code> if frozen.","Freeze this <code>Board</code>.","Returns the argument unchanged.","","Check if the player has won.","The height of this board.","Calls <code>U::from(self)</code>.","Check the availability of the positions specified.","Return if this <code>Board</code> is frozen.","Create a new <code>Board</code> instance.","","","Set state of some coordinates on the board to a specific …","Set a slice of the board to a specific state.","Returns a report of all the ships statuses without giving …","","","","Return a public <code>BoardStatus</code> for this board.","Count the number of <code>Strike</code>s on this <code>Board</code>.","","","","","Get the identifier of a <code>Strike</code>.","","","The width of this board.","A brief summary of the status of the board.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Denotes the position of on a board.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new <code>Coordinates</code>.","","Create a new <code>Coordinates</code> by shifting.","Create a new <code>Coordinates</code> by shifting downwards.","Create a new <code>Coordinates</code> by shifting rightwards.","","","","","","","","","Orientation of the ship.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Indicates the state of a position on the grid.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Randomly generate a ship.","","","","Count the number of strikes this <code>Ship</code> had sustained.","","Check if the two ships are the same.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Return the length of the ship.","Return the orientation of the ship.","","","","Return the current status of the ship.","Attempts to strike the ship.","","","","","Get the identifier of a <code>Strike</code>.","","","Return the x position of the ship.","Return the y position of the ship.","An abridged status of a <code>Ship</code> for the purpose of returning …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Orientation of the ship.","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","All possible ship types.","","","","","","Wraps the &amp;<code>str</code> with the designated colour.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Get the label of this ship type.","Get the length of this ship type.","","","","","","","Recording a <code>Strike</code>.","","","","","Return the coordinates of the strike.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Instantiate a new <code>Strike</code> object.","","","","","","Get the identifier of a <code>Strike</code>.","","","Return the x position of the strike.","Return the y position of the strike.","A report for a strike, formatted for export.","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Create a new <code>StrikeReport</code> from raw data.","","","","Try create a <code>StrikeReport</code> from a <code>Coordinates</code>.","","","","","","A trait for anything that can be used as a URL query.","","A trait for structs that is linear on the board - has a …","Build a <code>tide::Response</code> from this instance.","","Return the length of the segment.","Create a new instance from a <code>AppState</code> behind a <code>RwLock</code>.","Return the orientation of the segment.","","","","Return the x position of the segment.","Return the y position of the segment.","","Create a new instance from a <code>AppState</code> behind a <code>RwLock</code>.","A trait for anything that can be used as a URL query.","Try parse a <code>tide::Request</code> instance.","Try parse a <code>tide::Request</code> instance.","","Build a <code>tide::Response</code> from this instance.","A trait for structs that is linear on the board - has a …","Returns the starting coordinates in an array.","Returns the starting coordinates in an array.","Returns the <code>n</code>-th <code>Coordinates</code> of this <code>Segment</code>.","Returns the <code>n</code>-th <code>Coordinates</code> of this <code>Segment</code>.","Iterate through the <code>Coordinates</code> in this <code>Segment</code>.","Iterate through the <code>Coordinates</code> in this <code>Segment</code>.","","Return the length of the segment.","Return the orientation of the segment.","Returns the <code>SliceInfo</code> representing this <code>Segment</code>.","Returns the <code>SliceInfo</code> representing this <code>Segment</code>.","Return the x position of the segment.","Return the y position of the segment.","A special iterator class for iterating <code>Coordinates</code> through …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>IterSegment</code> from something that implements …","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,13,23,8,23,0,8,0,13,23,0,13,23,0,13,23,23,0,8,8,8,8,8,8,8,8,8,8,8,8,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,28,29,30,31,41,43,0,0,0,0,28,28,28,28,28,28,28,28,28,28,28,0,29,29,29,29,29,29,29,29,29,29,29,0,30,30,30,30,30,30,30,30,30,30,30,0,0,31,32,31,32,31,32,32,32,32,32,32,31,32,31,32,31,31,32,32,32,32,31,32,31,32,31,32,31,32,0,0,41,42,41,42,41,42,42,42,42,42,42,41,42,41,42,41,41,42,42,41,42,41,42,41,42,41,42,42,42,0,0,43,44,43,44,43,44,44,44,44,44,43,44,43,44,43,43,44,43,44,43,44,43,44,43,44,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,0,0,0,0,0,0,54,0,3,54,54,54,54,0,54,3,0,54,54,54,54,0,0,60,61,60,61,0,0,60,61,60,61,60,61,60,61,0,0,60,61,60,61,60,61,61,61,60,60,61,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,88,89,90,91,88,92,93,90,91,94,95,96,97,98,99,98,99,69,69,69,69,0,69,69,69,69,69,0,0,0,0,69,69,0,69,69,69,69,0,69,69,69,69,0,69,83,83,0,0,0,0,0,0,0,83,82,75,76,83,76,0,0,75,0,76,0,0,0,76,0,0,83,82,82,21,0,0,0,71,72,73,80,21,18,73,73,0,71,0,18,0,0,21,0,71,80,0,18,18,21,18,80,0,0,18,21,71,0,18,21,71,80,72,73,74,74,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,75,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,0,0,0,76,76,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,82,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,83,83,83,83,0,83,83,83,83,83,83,83,83,0,83,83,83,83,83,83,83,83,83,83,83,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,0,0,0,100,0,87,16,87,0,0,0,87,87,0,16,0,101,101,0,100,0,87,87,87,87,87,87,0,87,87,87,87,87,87,0,86,86,86,86,86,86,86,86,86,86,86,86,86],"f":[0,0,0,0,0,[[],[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3,[[2,[1]]]],0,0,0,0,0,0,0,[[]],[[]],[[[8,[[7,[[0,[4,5,6]]]]]],[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],0,[[]],[[]],0,[[[15,[[14,[13]]]]],[[8,[16]]]],[[],2],[[],2],[[],17],[[]],0,[[13,18],[[2,[19,1]]]],0,[[]],[[]],[[],13],[[13,19],[[2,[18,1]]]],[13,20],[[]],[[13,19],[[2,[[14,[18]],1]]]],[[13,19],[[2,[21,1]]]],[[]],[13,[[2,[[22,[21]],1]]]],[[13,23]],[[],13],[[13,[25,[24]],26],[[2,[21,1]]]],0,0,0,[13,[[15,[27]]]],[[],2],[[],2],[[],17],[[]],[3,[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[28,[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],[[]],[[]],0,[[[15,[[14,[13]]]]],28],[[],2],[[],2],[[],17],[[]],0,[[]],[[]],[[29,[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],[[]],[[]],0,[[[15,[[14,[13]]]]],29],[[],2],[[],2],[[],17],[[]],0,[[]],[[]],[[30,[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],[[]],[[]],0,[[[15,[[14,[13]]]]],30],[[],2],[[],2],[[],17],[[]],0,0,[[]],[[]],[[]],[[]],[[31,[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],[32,32],[[]],[33,[[2,[32]]]],[[32,32],34],[35,[[2,[36,37]]]],[[32,38],39],[[]],[[]],[[]],[[]],0,[[[15,[[14,[13]]]]],31],[[32,40],2],0,0,[[]],[[],2],[[],2],[[],2],[[],2],[[],17],[[],17],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[41,[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],[42,42],[[]],[33,[[2,[42]]]],[[42,42],34],[35,[[2,[36,37]]]],[[42,38],39],[[]],[[]],[[]],[[]],0,[[[15,[[14,[13]]]]],41],[[42,40],2],[[]],[[],2],[[],2],[[],2],[[],2],[[],17],[[],17],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[43,[9,[[0,[4,5,6]]]]],[[12,[[11,[10]]]]]],[44,44],[[]],[33,[[2,[44]]]],0,[[44,38],39],[[]],[[]],[[]],[[]],0,[[[15,[[14,[13]]]]],43],[[]],[[],2],[[],2],[[],2],[[],2],[[],17],[[],17],[[]],[[]],0,[[]],[[]],0,[23,23],[[]],[33,[[2,[23]]]],[[23,23],34],[35,[[2,[36,37]]]],0,[[23,38],39],[[]],[[[9,[[0,[4,5,6]]]],45],23],[[]],[[[47,[46]],46,46,45],23],0,[[23,40],2],0,0,[[]],[[],2],[[],2],[[],17],0,[[]],0,0,[13,48],0,[[]],[[]],[[],27],[[27,38],39],[[]],[[]],[[],27],[[27,[2,[1]]]],0,0,[[27,[2,[1]]],[[47,[[2,[1]]]]]],[[[15,[27]]],[[2,[1]]]],[[],2],[[],2],[[],17],[[]],0,0,[49,49],[49,49],[[]],[[]],[[],49],[[],49],0,[[50,38],39],[[]],[51,[[2,[50,52]]]],[51,[[2,[50,52]]]],[[],[[47,[53]]]],[[]],0,[[],2],[[],2],[[],17],[[50,51],[[2,[52]]]],[[50,51],[[2,[52]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[54,[[56,[55]]]],[[]],0,[[]],0,0,[[],2],[[],2],[[],17],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[0,[57,58]]]],[33,[[2,[59]]]],[[60,38],39],[[61,38],39],[38,[[2,[62]]]],[38,[[2,[62]]]],[[]],[[]],[[]],[[]],0,[[59,40],2],[[],2],[[],2],[[],2],[[],2],[[],17],[[],17],[61,[[2,[[47,[59]],63]]]],[[61,33],[[2,[[47,[59]]]]]],[[60,64],[[2,[59,63]]]],[[]],[[]],[33,[[2,[[47,[59]]]]]],[[[47,[59]],40],2],0,0,[[]],[[]],[3,3],[[]],[33,[[2,[3]]]],[35,[[2,[36,37]]]],[[3,38],39],[[]],[[]],0,[[3,50],3],[[3,40],2],[[]],[[],2],[50,[[2,[3,1]]]],[[[66,[65]]],[[2,[3,1]]]],[[],2],[[],17],[[]],[33,[[2,[59]]]],[[59,40],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,67],0,[[1,38],39],[[1,38],39],[[]],[[]],[1,46],[68],[[],46],[[],2],[[],2],[[],17],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[69,70],[[]],[[]],[64],[64],[64],0,[[69,64],46],[[]],[64],[[]],[[69,64]],[69,64],[69,64],[64],[[],2],[[],2],[[],17],[[]],[64],[[69,34,64],46],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[18,71],[[2,[1]]]],[[18,72],[[2,[73,1]]]],[[]],[[]],[33,[[2,[18]]]],[18,20],[35,[[2,[36,37]]]],[18,[[2,[1]]]],[18],[[]],0,[18,[[2,[34,1]]]],[18,24],[[]],[[18,74,75,24],34],[18,34],[[[25,[24]],26],18],0,[[18,40],2],[[18,74,75,24,76]],[[18,[79,[[25,[77]],78,78]],76]],[18,[[2,[[22,[80]],1]]]],0,0,0,[18,[[2,[21,1]]]],[18,24],0,[[],2],[[],2],[[],17],[18,19],0,[[]],[18,24],0,0,[[]],[[]],[21,21],[[]],[33,[[2,[21]]]],0,[35,[[2,[36,37]]]],[[21,38],39],[[]],[[]],[[21,40],2],0,0,0,[[]],[18,[[2,[21]]]],[[],2],[[],2],[[],17],0,[[]],0,[[]],[[]],[74,74],[[]],[33,[[2,[74]]]],[[74,74],34],[[],34],[35,[[2,[36,37]]]],[[74,38],39],[[]],[[]],[[24,24],74],[[74,40],2],[[74,75,81],74],[[74,81],74],[[74,81],74],[[]],[[],2],[[],2],[[],17],[[]],0,0,0,0,0,[[]],[[]],[75,75],[[]],[33,[[2,[75]]]],[35,[[2,[36,37]]]],[[75,38],39],[[]],[[]],[[75,40],2],[[]],[[],2],[[],2],[[],17],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[76,76],[[]],[[],76],[33,[[2,[76]]]],[[76,76],34],[35,[[2,[36,37]]]],[[76,38],39],[[76,38],39],[[]],[[]],[[76,40],2],[[]],[[],46],[[],2],[[],2],[[],17],[[]],0,[18,34],[[]],[[]],0,[71,[[2,[24,1]]]],[33,[[2,[71]]]],[[71,71],34],[35,[[2,[36,37]]]],[[71,38],39],[[]],[[]],[71,24],[71,75],0,[[71,40],2],0,[71,[[2,[82,1]]]],[[71,[15,[72]]],[[2,[34,1]]]],0,[[],2],[[],2],[[],17],[71,19],0,[[]],[71,24],[71,24],0,[[]],[[]],[80,80],[[]],0,[33,[[2,[80]]]],[35,[[2,[36,37]]]],[[80,38],39],[[]],[[]],[[80,40],2],0,0,[[]],[71,[[2,[80]]]],[[],2],[[],2],[[],17],0,[[]],0,0,0,0,[[]],[[]],[82,82],[[]],[33,[[2,[82]]]],[[82,82],34],[[],34],[35,[[2,[36,37]]]],[[82,38],39],[[]],[[]],[[82,40],2],[[]],[[],2],[[],2],[[],17],[[]],0,0,0,0,0,0,[[]],[[]],[83,83],[[]],[[83,64],46],[33,[[2,[83]]]],[35,[[2,[36,37]]]],0,[[83,38],39],[[]],[[]],[83,64],[83,24],[[83,40],2],[[]],[[],2],[[],2],[[],17],[[]],0,[[]],[[]],[72,72],[[]],[72,[[25,[24]]]],0,[33,[[2,[72]]]],[[72,72],34],[35,[[2,[36,37]]]],[[72,38],39],[[]],[[]],[74,72],[[72,40],2],[[]],[[],2],[[],2],[[],17],[72,19],0,[[]],[72,24],[72,24],0,[[]],[[]],[73,73],[[]],0,[33,[[2,[73]]]],[35,[[2,[36,37]]]],[[73,38],39],[[]],0,0,[[]],[[19,74,34,[47,[80]]],73],[[73,40],2],[[]],[[],2],[[76,34],[[2,[73,1]]]],[[],2],[[],17],0,[[]],0,0,0,0,[[],84],0,[[],24],[[[15,[[14,[13]]]]]],[[],75],0,0,0,[[],24],[[],24],0,[[[15,[[14,[13]]]]]],0,[9,[[2,[1]]]],[9,[[2,[1]]]],0,[[],84],0,[[],[[25,[24]]]],[[],[[25,[24]]]],[24,[[47,[74]]]],[24,[[47,[74]]]],[85,[[86,[85]]]],[85,[[86,[85]]]],0,[[],24],[[],75],[[],[[79,[[25,[77]],78,78]]]],[[],[[79,[[25,[77]],78,78]]]],[[],24],[[],24],0,[[]],[[]],0,[[]],[[]],[[]],[87,[[86,[87]]]],[[[86,[87]]],47],0,[[],2],[[],2],[[],17],[[]]],"c":[],"p":[[4,"AppError"],[4,"Result"],[3,"HostConfiguration"],[8,"Clone"],[8,"Send"],[8,"Sync"],[8,"Endpoint"],[3,"AppHook"],[3,"Request"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"AppState"],[3,"RwLock"],[3,"Arc"],[8,"IsAppHook"],[3,"TypeId"],[3,"Board"],[3,"Uuid"],[3,"Duration"],[3,"BoardStatus"],[3,"Vec"],[3,"PageVisit"],[15,"usize"],[15,"array"],[15,"u16"],[3,"TerminationToken"],[3,"BoardStatusHook"],[3,"DropBoardHook"],[3,"ListBoardsHook"],[3,"NewBoardHook"],[3,"NewBoardParams"],[8,"Deserializer"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[8,"Serializer"],[3,"StrikeHook"],[3,"StrikeParams"],[3,"TerminationHook"],[3,"TerminationQuery"],[6,"Result"],[3,"String"],[4,"Option"],[3,"Server"],[3,"Command"],[3,"CommandLineParameters"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"DATETIME_FORMAT"],[4,"BorrowedFormatItem"],[15,"slice"],[8,"Formattable"],[8,"Parsable"],[3,"OffsetDateTime"],[3,"Visitor"],[3,"OptionVisitor"],[3,"Error"],[8,"Error"],[15,"str"],[3,"Path"],[8,"AsRef"],[4,"StatusCode"],[3,"Demand"],[4,"LogLevel"],[15,"u8"],[3,"Ship"],[3,"Strike"],[3,"StrikeReport"],[3,"Coordinates"],[4,"Orientation"],[4,"Position"],[4,"SliceInfoElem"],[6,"Ix2"],[3,"SliceInfo"],[3,"ShipIntel"],[15,"i64"],[4,"ShipStatus"],[4,"ShipType"],[3,"Response"],[8,"Sized"],[3,"IterSegment"],[8,"Segment"],[13,"ServerStartUpError"],[13,"Unknown"],[13,"ConfigNotReadable"],[13,"ConfigNotParsable"],[13,"CtrlCError"],[13,"RemoteRequestedTermination"],[13,"DuplicatedBoard"],[13,"MissingBoard"],[13,"FrozenBoard"],[13,"InvalidBoard"],[13,"PositionOccupied"],[13,"CoordinatesOutOfBounds"],[8,"ResponseBuilder"],[8,"QueryParams"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
